Extension [ <persistent> extension #132 swoole version 2.0.7 ] {

  - INI {
    Entry [ swoole.aio_thread_num <ALL> ]
      Current = '2'
    }
    Entry [ swoole.display_errors <ALL> ]
      Current = 'On'
    }
    Entry [ swoole.use_namespace <SYSTEM> ]
      Current = 'On'
    }
    Entry [ swoole.fast_serialize <ALL> ]
      Current = 'Off'
    }
    Entry [ swoole.unixsock_buffer_size <ALL> ]
      Current = '8388608'
    }
  }

  - Constants [68] {
    Constant [ integer SWOOLE_BASE ] { 4 }
    Constant [ integer SWOOLE_THREAD ] { 2 }
    Constant [ integer SWOOLE_PROCESS ] { 3 }
    Constant [ integer SWOOLE_IPC_UNSOCK ] { 1 }
    Constant [ integer SWOOLE_IPC_MSGQUEUE ] { 2 }
    Constant [ integer SWOOLE_IPC_PREEMPTIVE ] { 3 }
    Constant [ integer SWOOLE_SOCK_TCP ] { 1 }
    Constant [ integer SWOOLE_SOCK_TCP6 ] { 3 }
    Constant [ integer SWOOLE_SOCK_UDP ] { 2 }
    Constant [ integer SWOOLE_SOCK_UDP6 ] { 4 }
    Constant [ integer SWOOLE_SOCK_UNIX_DGRAM ] { 5 }
    Constant [ integer SWOOLE_SOCK_UNIX_STREAM ] { 6 }
    Constant [ integer SWOOLE_TCP ] { 1 }
    Constant [ integer SWOOLE_TCP6 ] { 3 }
    Constant [ integer SWOOLE_UDP ] { 2 }
    Constant [ integer SWOOLE_UDP6 ] { 4 }
    Constant [ integer SWOOLE_UNIX_DGRAM ] { 5 }
    Constant [ integer SWOOLE_UNIX_STREAM ] { 6 }
    Constant [ integer SWOOLE_SOCK_SYNC ] { 0 }
    Constant [ integer SWOOLE_SOCK_ASYNC ] { 1 }
    Constant [ integer SWOOLE_SYNC ] { 2048 }
    Constant [ integer SWOOLE_ASYNC ] { 1024 }
    Constant [ integer SWOOLE_KEEP ] { 4096 }
    Constant [ integer SWOOLE_SSL ] { 512 }
    Constant [ integer SWOOLE_SSLv3_METHOD ] { 1 }
    Constant [ integer SWOOLE_SSLv3_SERVER_METHOD ] { 2 }
    Constant [ integer SWOOLE_SSLv3_CLIENT_METHOD ] { 3 }
    Constant [ integer SWOOLE_SSLv23_METHOD ] { 0 }
    Constant [ integer SWOOLE_SSLv23_SERVER_METHOD ] { 4 }
    Constant [ integer SWOOLE_SSLv23_CLIENT_METHOD ] { 5 }
    Constant [ integer SWOOLE_TLSv1_METHOD ] { 6 }
    Constant [ integer SWOOLE_TLSv1_SERVER_METHOD ] { 7 }
    Constant [ integer SWOOLE_TLSv1_CLIENT_METHOD ] { 8 }
    Constant [ integer SWOOLE_TLSv1_1_METHOD ] { 9 }
    Constant [ integer SWOOLE_TLSv1_1_SERVER_METHOD ] { 10 }
    Constant [ integer SWOOLE_TLSv1_1_CLIENT_METHOD ] { 11 }
    Constant [ integer SWOOLE_TLSv1_2_METHOD ] { 12 }
    Constant [ integer SWOOLE_TLSv1_2_SERVER_METHOD ] { 13 }
    Constant [ integer SWOOLE_TLSv1_2_CLIENT_METHOD ] { 14 }
    Constant [ integer SWOOLE_DTLSv1_METHOD ] { 15 }
    Constant [ integer SWOOLE_DTLSv1_SERVER_METHOD ] { 16 }
    Constant [ integer SWOOLE_DTLSv1_CLIENT_METHOD ] { 17 }
    Constant [ integer SWOOLE_EVENT_READ ] { 512 }
    Constant [ integer SWOOLE_EVENT_WRITE ] { 1024 }
    Constant [ string SWOOLE_VERSION ] { 2.0.7 }
    Constant [ integer SWOOLE_REDIS_MODE_MULTI ] { 0 }
    Constant [ integer SWOOLE_REDIS_MODE_PIPELINE ] { 1 }
    Constant [ integer SWOOLE_REDIS_TYPE_NOT_FOUND ] { 0 }
    Constant [ integer SWOOLE_REDIS_TYPE_STRING ] { 1 }
    Constant [ integer SWOOLE_REDIS_TYPE_SET ] { 2 }
    Constant [ integer SWOOLE_REDIS_TYPE_LIST ] { 3 }
    Constant [ integer SWOOLE_REDIS_TYPE_ZSET ] { 4 }
    Constant [ integer SWOOLE_REDIS_TYPE_HASH ] { 5 }
    Constant [ integer SWOOLE_AIO_BASE ] { 0 }
    Constant [ integer SWOOLE_AIO_LINUX ] { 1 }
    Constant [ integer SWOOLE_FILELOCK ] { 2 }
    Constant [ integer SWOOLE_MUTEX ] { 3 }
    Constant [ integer SWOOLE_SEM ] { 4 }
    Constant [ integer SWOOLE_RWLOCK ] { 1 }
    Constant [ integer SWOOLE_SPINLOCK ] { 5 }
    Constant [ integer WEBSOCKET_OPCODE_TEXT ] { 1 }
    Constant [ integer WEBSOCKET_OPCODE_BINARY ] { 2 }
    Constant [ integer WEBSOCKET_OPCODE_PING ] { 9 }
    Constant [ integer WEBSOCKET_STATUS_CONNECTION ] { 1 }
    Constant [ integer WEBSOCKET_STATUS_HANDSHAKE ] { 2 }
    Constant [ integer WEBSOCKET_STATUS_FRAME ] { 3 }
    Constant [ integer WEBSOCKET_STATUS_ACTIVE ] { 3 }
    Constant [ integer SWOOLE_FAST_PACK ] { 1 }
  }

  - Functions {
    Function [ <internal:swoole> function swoole_version ] {

      - Parameters [0] {
      }
    }
    Function [ <internal:swoole> function swoole_cpu_num ] {

      - Parameters [0] {
      }
    }
    Function [ <internal:swoole> function swoole_last_error ] {

      - Parameters [0] {
      }
    }
    Function [ <internal:swoole> function swoole_event_add ] {

      - Parameters [4] {
        Parameter #0 [ <required> $fd ]
        Parameter #1 [ <required> $read_callback ]
        Parameter #2 [ <optional> $write_callback ]
        Parameter #3 [ <optional> $events ]
      }
    }
    Function [ <internal:swoole> function swoole_event_set ] {

      - Parameters [4] {
        Parameter #0 [ <required> $fd ]
        Parameter #1 [ <optional> $read_callback ]
        Parameter #2 [ <optional> $write_callback ]
        Parameter #3 [ <optional> $events ]
      }
    }
    Function [ <internal:swoole> function swoole_event_del ] {

      - Parameters [1] {
        Parameter #0 [ <required> $fd ]
      }
    }
    Function [ <internal:swoole> function swoole_event_exit ] {

      - Parameters [0] {
      }
    }
    Function [ <internal:swoole> function swoole_event_wait ] {

      - Parameters [0] {
      }
    }
    Function [ <internal:swoole> function swoole_event_write ] {

      - Parameters [2] {
        Parameter #0 [ <required> $fd ]
        Parameter #1 [ <required> $data ]
      }
    }
    Function [ <internal:swoole> function swoole_event_defer ] {

      - Parameters [1] {
        Parameter #0 [ <required> $callback ]
      }
    }
    Function [ <internal:swoole> function swoole_timer_after ] {

      - Parameters [3] {
        Parameter #0 [ <required> $ms ]
        Parameter #1 [ <required> $callback ]
        Parameter #2 [ <optional> $param ]
      }
    }
    Function [ <internal:swoole> function swoole_timer_tick ] {

      - Parameters [2] {
        Parameter #0 [ <required> $ms ]
        Parameter #1 [ <required> $callback ]
      }
    }
    Function [ <internal:swoole> function swoole_timer_exists ] {

      - Parameters [1] {
        Parameter #0 [ <required> $timer_id ]
      }
    }
    Function [ <internal:swoole> function swoole_timer_clear ] {

      - Parameters [1] {
        Parameter #0 [ <required> $timer_id ]
      }
    }
    Function [ <internal:swoole> function swoole_async_set ] {

      - Parameters [1] {
        Parameter #0 [ <required> array $settings ]
      }
    }
    Function [ <internal:swoole> function swoole_async_read ] {

      - Parameters [4] {
        Parameter #0 [ <required> $filename ]
        Parameter #1 [ <required> $callback ]
        Parameter #2 [ <optional> $chunk_size ]
        Parameter #3 [ <optional> $offset ]
      }
    }
    Function [ <internal:swoole> function swoole_async_write ] {

      - Parameters [4] {
        Parameter #0 [ <required> $filename ]
        Parameter #1 [ <required> $content ]
        Parameter #2 [ <optional> $offset ]
        Parameter #3 [ <optional> $callback ]
      }
    }
    Function [ <internal:swoole> function swoole_async_readfile ] {

      - Parameters [2] {
        Parameter #0 [ <required> $filename ]
        Parameter #1 [ <required> $callback ]
      }
    }
    Function [ <internal:swoole> function swoole_async_writefile ] {

      - Parameters [4] {
        Parameter #0 [ <required> $filename ]
        Parameter #1 [ <required> $content ]
        Parameter #2 [ <optional> $callback ]
        Parameter #3 [ <optional> $flags ]
      }
    }
    Function [ <internal:swoole> function swoole_async_dns_lookup ] {

      - Parameters [2] {
        Parameter #0 [ <required> $domain_name ]
        Parameter #1 [ <required> $content ]
      }
    }
    Function [ <internal:swoole> function swoole_client_select ] {

      - Parameters [4] {
        Parameter #0 [ <required> &$read_array ]
        Parameter #1 [ <required> &$write_array ]
        Parameter #2 [ <required> &$error_array ]
        Parameter #3 [ <optional> $timeout ]
      }
    }
    Function [ <internal:swoole> function swoole_select ] {

      - Parameters [4] {
        Parameter #0 [ <required> &$read_array ]
        Parameter #1 [ <required> &$write_array ]
        Parameter #2 [ <required> &$error_array ]
        Parameter #3 [ <optional> $timeout ]
      }
    }
    Function [ <internal:swoole> function swoole_set_process_name ] {

      - Parameters [1] {
        Parameter #0 [ <required> $process_name ]
      }
    }
    Function [ <internal:swoole> function swoole_get_local_ip ] {

      - Parameters [0] {
      }
    }
    Function [ <internal:swoole> function swoole_strerror ] {

      - Parameters [1] {
        Parameter #0 [ <required> $errno ]
      }
    }
    Function [ <internal:swoole> function swoole_errno ] {

      - Parameters [0] {
      }
    }
    Function [ <internal:swoole> function swoole_load_module ] {
    }
  }

  - Classes [35] {
    Class [ <internal:swoole> class Swoole\Server ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [38] {
        Method [ <internal:swoole, ctor> public method __construct ] {

          - Parameters [4] {
            Parameter #0 [ <required> $host ]
            Parameter #1 [ <optional> $port ]
            Parameter #2 [ <optional> $mode ]
            Parameter #3 [ <optional> $sock_type ]
          }
        }

        Method [ <internal:swoole> public method listen ] {

          - Parameters [3] {
            Parameter #0 [ <required> $host ]
            Parameter #1 [ <required> $port ]
            Parameter #2 [ <required> $sock_type ]
          }
        }

        Method [ <internal:swoole> public method addlistener ] {

          - Parameters [3] {
            Parameter #0 [ <required> $host ]
            Parameter #1 [ <required> $port ]
            Parameter #2 [ <required> $sock_type ]
          }
        }

        Method [ <internal:swoole> public method on ] {

          - Parameters [2] {
            Parameter #0 [ <required> $event_name ]
            Parameter #1 [ <required> $callback ]
          }
        }

        Method [ <internal:swoole> public method set ] {

          - Parameters [1] {
            Parameter #0 [ <required> array $settings ]
          }
        }

        Method [ <internal:swoole> public method start ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole> public method send ] {

          - Parameters [3] {
            Parameter #0 [ <required> $fd ]
            Parameter #1 [ <required> $send_data ]
            Parameter #2 [ <optional> $reactor_id ]
          }
        }

        Method [ <internal:swoole> public method sendto ] {

          - Parameters [4] {
            Parameter #0 [ <required> $ip ]
            Parameter #1 [ <required> $port ]
            Parameter #2 [ <required> $send_data ]
            Parameter #3 [ <optional> $server_socket ]
          }
        }

        Method [ <internal:swoole> public method sendwait ] {

          - Parameters [2] {
            Parameter #0 [ <required> $conn_fd ]
            Parameter #1 [ <required> $send_data ]
          }
        }

        Method [ <internal:swoole> public method exist ] {

          - Parameters [1] {
            Parameter #0 [ <required> $fd ]
          }
        }

        Method [ <internal:swoole> public method protect ] {

          - Parameters [2] {
            Parameter #0 [ <required> $fd ]
            Parameter #1 [ <optional> $is_protected ]
          }
        }

        Method [ <internal:swoole> public method sendfile ] {

          - Parameters [3] {
            Parameter #0 [ <required> $conn_fd ]
            Parameter #1 [ <required> $filename ]
            Parameter #2 [ <optional> $offset ]
          }
        }

        Method [ <internal:swoole> public method close ] {

          - Parameters [2] {
            Parameter #0 [ <required> $fd ]
            Parameter #1 [ <optional> $reset ]
          }
        }

        Method [ <internal:swoole> public method confirm ] {

          - Parameters [1] {
            Parameter #0 [ <required> $fd ]
          }
        }

        Method [ <internal:swoole> public method pause ] {

          - Parameters [1] {
            Parameter #0 [ <required> $fd ]
          }
        }

        Method [ <internal:swoole> public method resume ] {

          - Parameters [1] {
            Parameter #0 [ <required> $fd ]
          }
        }

        Method [ <internal:swoole> public method task ] {

          - Parameters [3] {
            Parameter #0 [ <required> $data ]
            Parameter #1 [ <optional> $worker_id ]
            Parameter #2 [ <optional> $finish_callback ]
          }
        }

        Method [ <internal:swoole> public method taskwait ] {

          - Parameters [3] {
            Parameter #0 [ <required> $data ]
            Parameter #1 [ <optional> $timeout ]
            Parameter #2 [ <optional> $worker_id ]
          }
        }

        Method [ <internal:swoole> public method taskWaitMulti ] {

          - Parameters [2] {
            Parameter #0 [ <required> array $tasks ]
            Parameter #1 [ <optional> $timeout ]
          }
        }

        Method [ <internal:swoole> public method finish ] {

          - Parameters [1] {
            Parameter #0 [ <required> $data ]
          }
        }

        Method [ <internal:swoole> public method reload ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole> public method shutdown ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole> public method stop ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $worker_id ]
          }
        }

        Method [ <internal:swoole> public method getLastError ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole> public method heartbeat ] {

          - Parameters [1] {
            Parameter #0 [ <required> $reactor_id ]
          }
        }

        Method [ <internal:swoole> public method connection_info ] {

          - Parameters [2] {
            Parameter #0 [ <required> $fd ]
            Parameter #1 [ <optional> $reactor_id ]
          }
        }

        Method [ <internal:swoole> public method connection_list ] {

          - Parameters [2] {
            Parameter #0 [ <required> $start_fd ]
            Parameter #1 [ <optional> $find_count ]
          }
        }

        Method [ <internal:swoole> public method getClientInfo ] {

          - Parameters [2] {
            Parameter #0 [ <required> $fd ]
            Parameter #1 [ <optional> $reactor_id ]
          }
        }

        Method [ <internal:swoole> public method getClientList ] {

          - Parameters [2] {
            Parameter #0 [ <required> $start_fd ]
            Parameter #1 [ <optional> $find_count ]
          }
        }

        Method [ <internal:swoole> public method after ] {

          - Parameters [3] {
            Parameter #0 [ <required> $ms ]
            Parameter #1 [ <required> $callback ]
            Parameter #2 [ <optional> $param ]
          }
        }

        Method [ <internal:swoole> public method tick ] {

          - Parameters [2] {
            Parameter #0 [ <required> $ms ]
            Parameter #1 [ <required> $callback ]
          }
        }

        Method [ <internal:swoole> public method clearTimer ] {

          - Parameters [1] {
            Parameter #0 [ <required> $timer_id ]
          }
        }

        Method [ <internal:swoole> public method defer ] {

          - Parameters [1] {
            Parameter #0 [ <required> $callback ]
          }
        }

        Method [ <internal:swoole> public method sendMessage ] {

          - Parameters [2] {
            Parameter #0 [ <required> $dst_worker_id ]
            Parameter #1 [ <required> $data ]
          }
        }

        Method [ <internal:swoole> public method addProcess ] {

          - Parameters [1] {
            Parameter #0 [ <required> swoole_process $process ]
          }
        }

        Method [ <internal:swoole> public method stats ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole> public method getSocket ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $port ]
          }
        }

        Method [ <internal:swoole> public method bind ] {

          - Parameters [2] {
            Parameter #0 [ <required> $fd ]
            Parameter #1 [ <required> $uid ]
          }
        }
      }
    }

    Class [ <internal:swoole> class Swoole\Timer ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [4] {
        Method [ <internal:swoole> static public method tick ] {

          - Parameters [3] {
            Parameter #0 [ <required> $ms ]
            Parameter #1 [ <required> $callback ]
            Parameter #2 [ <optional> $param ]
          }
        }

        Method [ <internal:swoole> static public method after ] {

          - Parameters [2] {
            Parameter #0 [ <required> $ms ]
            Parameter #1 [ <required> $callback ]
          }
        }

        Method [ <internal:swoole> static public method exists ] {

          - Parameters [1] {
            Parameter #0 [ <required> $timer_id ]
          }
        }

        Method [ <internal:swoole> static public method clear ] {

          - Parameters [1] {
            Parameter #0 [ <required> $timer_id ]
          }
        }
      }

      - Properties [0] {
      }

      - Methods [0] {
      }
    }

    Class [ <internal:swoole> class Swoole\Event ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [7] {
        Method [ <internal:swoole> static public method add ] {

          - Parameters [4] {
            Parameter #0 [ <required> $fd ]
            Parameter #1 [ <required> $read_callback ]
            Parameter #2 [ <optional> $write_callback ]
            Parameter #3 [ <optional> $events ]
          }
        }

        Method [ <internal:swoole> static public method del ] {

          - Parameters [1] {
            Parameter #0 [ <required> $fd ]
          }
        }

        Method [ <internal:swoole> static public method set ] {

          - Parameters [4] {
            Parameter #0 [ <required> $fd ]
            Parameter #1 [ <optional> $read_callback ]
            Parameter #2 [ <optional> $write_callback ]
            Parameter #3 [ <optional> $events ]
          }
        }

        Method [ <internal:swoole> static public method exit ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole> static public method write ] {

          - Parameters [2] {
            Parameter #0 [ <required> $fd ]
            Parameter #1 [ <required> $data ]
          }
        }

        Method [ <internal:swoole> static public method wait ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole> static public method defer ] {

          - Parameters [1] {
            Parameter #0 [ <required> $callback ]
          }
        }
      }

      - Properties [0] {
      }

      - Methods [0] {
      }
    }

    Class [ <internal:swoole> class Swoole\Async ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [6] {
        Method [ <internal:swoole> static public method read ] {

          - Parameters [4] {
            Parameter #0 [ <required> $filename ]
            Parameter #1 [ <required> $callback ]
            Parameter #2 [ <optional> $chunk_size ]
            Parameter #3 [ <optional> $offset ]
          }
        }

        Method [ <internal:swoole> static public method write ] {

          - Parameters [4] {
            Parameter #0 [ <required> $filename ]
            Parameter #1 [ <required> $content ]
            Parameter #2 [ <optional> $offset ]
            Parameter #3 [ <optional> $callback ]
          }
        }

        Method [ <internal:swoole> static public method readFile ] {

          - Parameters [2] {
            Parameter #0 [ <required> $filename ]
            Parameter #1 [ <required> $callback ]
          }
        }

        Method [ <internal:swoole> static public method writeFile ] {

          - Parameters [4] {
            Parameter #0 [ <required> $filename ]
            Parameter #1 [ <required> $content ]
            Parameter #2 [ <optional> $callback ]
            Parameter #3 [ <optional> $flags ]
          }
        }

        Method [ <internal:swoole> static public method dnsLookup ] {

          - Parameters [2] {
            Parameter #0 [ <required> $domain_name ]
            Parameter #1 [ <required> $content ]
          }
        }

        Method [ <internal:swoole> static public method set ] {

          - Parameters [1] {
            Parameter #0 [ <required> array $settings ]
          }
        }
      }

      - Properties [0] {
      }

      - Methods [0] {
      }
    }

    Class [ <internal:swoole> <iterateable> class Swoole\Connection\Iterator implements Iterator, Traversable, Countable, ArrayAccess ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [10] {
        Method [ <internal:swoole, prototype Iterator> public method rewind ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole, prototype Iterator> public method next ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole, prototype Iterator> public method current ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole, prototype Iterator> public method key ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole, prototype Iterator> public method valid ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole, prototype Countable> public method count ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole, prototype ArrayAccess> public method offsetExists ] {

          - Parameters [1] {
            Parameter #0 [ <required> $fd ]
          }
        }

        Method [ <internal:swoole, prototype ArrayAccess> public method offsetGet ] {

          - Parameters [1] {
            Parameter #0 [ <required> $fd ]
          }
        }

        Method [ <internal:swoole, prototype ArrayAccess> public method offsetSet ] {

          - Parameters [2] {
            Parameter #0 [ <required> $fd ]
            Parameter #1 [ <required> $value ]
          }
        }

        Method [ <internal:swoole, prototype ArrayAccess> public method offsetUnset ] {

          - Parameters [1] {
            Parameter #0 [ <required> $fd ]
          }
        }
      }
    }

    Class [ <internal:swoole> class Swoole\Exception extends Exception implements Throwable ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [4] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
      }

      - Methods [10] {
        Method [ <internal:Core, inherits Exception, ctor> public method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> public method __wakeup ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> public method __toString ] {
        }
      }
    }

    Class [ <internal:swoole> class Swoole\Server\Port ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [5] {
        Method [ <internal:swoole, ctor> private method __construct ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole, dtor> public method __destruct ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole> public method set ] {

          - Parameters [1] {
            Parameter #0 [ <required> array $settings ]
          }
        }

        Method [ <internal:swoole> public method on ] {

          - Parameters [2] {
            Parameter #0 [ <required> $event_name ]
            Parameter #1 [ <required> $callback ]
          }
        }

        Method [ <internal:swoole> public method getSocket ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:swoole> class Swoole\Client ] {

      - Constants [4] {
        Constant [ integer MSG_OOB ] { 1 }
        Constant [ integer MSG_PEEK ] { 2 }
        Constant [ integer MSG_DONTWAIT ] { 64 }
        Constant [ integer MSG_WAITALL ] { 256 }
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [4] {
        Property [ <default> public $errCode ]
        Property [ <default> public $sock ]
        Property [ <default> public $reuse ]
        Property [ <default> public $reuseCount ]
      }

      - Methods [22] {
        Method [ <internal:swoole, ctor> public method __construct ] {

          - Parameters [2] {
            Parameter #0 [ <required> $type ]
            Parameter #1 [ <optional> $async ]
          }
        }

        Method [ <internal:swoole, dtor> public method __destruct ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole> public method set ] {

          - Parameters [1] {
            Parameter #0 [ <required> array $settings ]
          }
        }

        Method [ <internal:swoole> public method connect ] {

          - Parameters [4] {
            Parameter #0 [ <required> $host ]
            Parameter #1 [ <optional> $port ]
            Parameter #2 [ <optional> $timeout ]
            Parameter #3 [ <optional> $sock_flag ]
          }
        }

        Method [ <internal:swoole> public method recv ] {

          - Parameters [2] {
            Parameter #0 [ <optional> $size ]
            Parameter #1 [ <optional> $flag ]
          }
        }

        Method [ <internal:swoole> public method send ] {

          - Parameters [2] {
            Parameter #0 [ <required> $data ]
            Parameter #1 [ <optional> $flag ]
          }
        }

        Method [ <internal:swoole> public method pipe ] {

          - Parameters [1] {
            Parameter #0 [ <required> $dst_socket ]
          }
        }

        Method [ <internal:swoole> public method sendfile ] {

          - Parameters [2] {
            Parameter #0 [ <required> $filename ]
            Parameter #1 [ <optional> $offset ]
          }
        }

        Method [ <internal:swoole> public method sendto ] {

          - Parameters [3] {
            Parameter #0 [ <required> $ip ]
            Parameter #1 [ <required> $port ]
            Parameter #2 [ <required> $data ]
          }
        }

        Method [ <internal:swoole> public method sleep ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole> public method wakeup ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole> public method pause ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole> public method resume ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole> public method enableSSL ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $callback ]
          }
        }

        Method [ <internal:swoole> public method getPeerCert ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole> public method verifyPeerCert ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole> public method isConnected ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole> public method getsockname ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole> public method getpeername ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole> public method close ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $force ]
          }
        }

        Method [ <internal:swoole> public method on ] {

          - Parameters [2] {
            Parameter #0 [ <required> $event_name ]
            Parameter #1 [ <required> $callback ]
          }
        }

        Method [ <internal:swoole> public method getSocket ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:swoole> class Swoole\Coroutine\Client ] {

      - Constants [4] {
        Constant [ integer MSG_OOB ] { 1 }
        Constant [ integer MSG_PEEK ] { 2 }
        Constant [ integer MSG_DONTWAIT ] { 64 }
        Constant [ integer MSG_WAITALL ] { 256 }
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [2] {
        Property [ <default> public $errCode ]
        Property [ <default> public $sock ]
      }

      - Methods [15] {
        Method [ <internal:swoole, ctor> public method __construct ] {
        }

        Method [ <internal:swoole, dtor> public method __destruct ] {
        }

        Method [ <internal:swoole> public method set ] {
        }

        Method [ <internal:swoole> public method connect ] {
        }

        Method [ <internal:swoole> public method recv ] {
        }

        Method [ <internal:swoole> public method send ] {
        }

        Method [ <internal:swoole> public method sendfile ] {
        }

        Method [ <internal:swoole> public method sendto ] {
        }

        Method [ <internal:swoole> public method enableSSL ] {
        }

        Method [ <internal:swoole> public method getPeerCert ] {
        }

        Method [ <internal:swoole> public method verifyPeerCert ] {
        }

        Method [ <internal:swoole> public method isConnected ] {
        }

        Method [ <internal:swoole> public method getsockname ] {
        }

        Method [ <internal:swoole> public method getpeername ] {
        }

        Method [ <internal:swoole> public method close ] {
        }
      }
    }

    Class [ <internal:swoole> class Swoole\Coroutine\Redis ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [2] {
        Property [ <default> public $errCode ]
        Property [ <default> public $errMsg ]
      }

      - Methods [148] {
        Method [ <internal:swoole, ctor> public method __construct ] {
        }

        Method [ <internal:swoole, dtor> public method __destruct ] {
        }

        Method [ <internal:swoole> public method connect ] {
        }

        Method [ <internal:swoole> public method setDefer ] {
        }

        Method [ <internal:swoole> public method getDefer ] {
        }

        Method [ <internal:swoole> public method recv ] {
        }

        Method [ <internal:swoole> public method close ] {
        }

        Method [ <internal:swoole> public method set ] {
        }

        Method [ <internal:swoole> public method setBit ] {
        }

        Method [ <internal:swoole> public method setEx ] {
        }

        Method [ <internal:swoole> public method psetEx ] {
        }

        Method [ <internal:swoole> public method lSet ] {
        }

        Method [ <internal:swoole> public method get ] {
        }

        Method [ <internal:swoole> public method mGet ] {
        }

        Method [ <internal:swoole> public method del ] {
        }

        Method [ <internal:swoole> public method hDel ] {
        }

        Method [ <internal:swoole> public method hSet ] {
        }

        Method [ <internal:swoole> public method hMSet ] {
        }

        Method [ <internal:swoole> public method hSetNx ] {
        }

        Method [ <internal:swoole> public method delete ] {
        }

        Method [ <internal:swoole> public method mSet ] {
        }

        Method [ <internal:swoole> public method mSetNx ] {
        }

        Method [ <internal:swoole> public method getKeys ] {
        }

        Method [ <internal:swoole> public method keys ] {
        }

        Method [ <internal:swoole> public method exists ] {
        }

        Method [ <internal:swoole> public method type ] {
        }

        Method [ <internal:swoole> public method strLen ] {
        }

        Method [ <internal:swoole> public method lPop ] {
        }

        Method [ <internal:swoole> public method blPop ] {
        }

        Method [ <internal:swoole> public method rPop ] {
        }

        Method [ <internal:swoole> public method brPop ] {
        }

        Method [ <internal:swoole> public method bRPopLPush ] {
        }

        Method [ <internal:swoole> public method lSize ] {
        }

        Method [ <internal:swoole> public method lLen ] {
        }

        Method [ <internal:swoole> public method sSize ] {
        }

        Method [ <internal:swoole> public method scard ] {
        }

        Method [ <internal:swoole> public method sPop ] {
        }

        Method [ <internal:swoole> public method sMembers ] {
        }

        Method [ <internal:swoole> public method sGetMembers ] {
        }

        Method [ <internal:swoole> public method sRandMember ] {
        }

        Method [ <internal:swoole> public method persist ] {
        }

        Method [ <internal:swoole> public method ttl ] {
        }

        Method [ <internal:swoole> public method pttl ] {
        }

        Method [ <internal:swoole> public method zCard ] {
        }

        Method [ <internal:swoole> public method zSize ] {
        }

        Method [ <internal:swoole> public method hLen ] {
        }

        Method [ <internal:swoole> public method hKeys ] {
        }

        Method [ <internal:swoole> public method hVals ] {
        }

        Method [ <internal:swoole> public method hGetAll ] {
        }

        Method [ <internal:swoole> public method debug ] {
        }

        Method [ <internal:swoole> public method restore ] {
        }

        Method [ <internal:swoole> public method dump ] {
        }

        Method [ <internal:swoole> public method renameKey ] {
        }

        Method [ <internal:swoole> public method rename ] {
        }

        Method [ <internal:swoole> public method renameNx ] {
        }

        Method [ <internal:swoole> public method rpoplpush ] {
        }

        Method [ <internal:swoole> public method randomKey ] {
        }

        Method [ <internal:swoole> public method ping ] {
        }

        Method [ <internal:swoole> public method auth ] {
        }

        Method [ <internal:swoole> public method unwatch ] {
        }

        Method [ <internal:swoole> public method watch ] {
        }

        Method [ <internal:swoole> public method save ] {
        }

        Method [ <internal:swoole> public method bgSave ] {
        }

        Method [ <internal:swoole> public method lastSave ] {
        }

        Method [ <internal:swoole> public method flushDB ] {
        }

        Method [ <internal:swoole> public method flushAll ] {
        }

        Method [ <internal:swoole> public method dbSize ] {
        }

        Method [ <internal:swoole> public method bgrewriteaof ] {
        }

        Method [ <internal:swoole> public method time ] {
        }

        Method [ <internal:swoole> public method role ] {
        }

        Method [ <internal:swoole> public method setRange ] {
        }

        Method [ <internal:swoole> public method setNx ] {
        }

        Method [ <internal:swoole> public method getSet ] {
        }

        Method [ <internal:swoole> public method append ] {
        }

        Method [ <internal:swoole> public method lPushx ] {
        }

        Method [ <internal:swoole> public method lPush ] {
        }

        Method [ <internal:swoole> public method rPush ] {
        }

        Method [ <internal:swoole> public method rPushx ] {
        }

        Method [ <internal:swoole> public method sContains ] {
        }

        Method [ <internal:swoole> public method sismember ] {
        }

        Method [ <internal:swoole> public method zScore ] {
        }

        Method [ <internal:swoole> public method zRank ] {
        }

        Method [ <internal:swoole> public method zRevRank ] {
        }

        Method [ <internal:swoole> public method hGet ] {
        }

        Method [ <internal:swoole> public method hMGet ] {
        }

        Method [ <internal:swoole> public method hExists ] {
        }

        Method [ <internal:swoole> public method publish ] {
        }

        Method [ <internal:swoole> public method zIncrBy ] {
        }

        Method [ <internal:swoole> public method zAdd ] {
        }

        Method [ <internal:swoole> public method zDeleteRangeByScore ] {
        }

        Method [ <internal:swoole> public method zRemRangeByScore ] {
        }

        Method [ <internal:swoole> public method zCount ] {
        }

        Method [ <internal:swoole> public method zRange ] {
        }

        Method [ <internal:swoole> public method zRevRange ] {
        }

        Method [ <internal:swoole> public method zRangeByScore ] {
        }

        Method [ <internal:swoole> public method zRevRangeByScore ] {
        }

        Method [ <internal:swoole> public method zRangeByLex ] {
        }

        Method [ <internal:swoole> public method zRevRangeByLex ] {
        }

        Method [ <internal:swoole> public method zInter ] {
        }

        Method [ <internal:swoole> public method zinterstore ] {
        }

        Method [ <internal:swoole> public method zUnion ] {
        }

        Method [ <internal:swoole> public method zunionstore ] {
        }

        Method [ <internal:swoole> public method incrBy ] {
        }

        Method [ <internal:swoole> public method hIncrBy ] {
        }

        Method [ <internal:swoole> public method incr ] {
        }

        Method [ <internal:swoole> public method decrBy ] {
        }

        Method [ <internal:swoole> public method decr ] {
        }

        Method [ <internal:swoole> public method getBit ] {
        }

        Method [ <internal:swoole> public method lInsert ] {
        }

        Method [ <internal:swoole> public method lGet ] {
        }

        Method [ <internal:swoole> public method lIndex ] {
        }

        Method [ <internal:swoole> public method setTimeout ] {
        }

        Method [ <internal:swoole> public method expire ] {
        }

        Method [ <internal:swoole> public method pexpire ] {
        }

        Method [ <internal:swoole> public method expireAt ] {
        }

        Method [ <internal:swoole> public method pexpireAt ] {
        }

        Method [ <internal:swoole> public method move ] {
        }

        Method [ <internal:swoole> public method select ] {
        }

        Method [ <internal:swoole> public method getRange ] {
        }

        Method [ <internal:swoole> public method listTrim ] {
        }

        Method [ <internal:swoole> public method ltrim ] {
        }

        Method [ <internal:swoole> public method lGetRange ] {
        }

        Method [ <internal:swoole> public method lRange ] {
        }

        Method [ <internal:swoole> public method lRem ] {
        }

        Method [ <internal:swoole> public method lRemove ] {
        }

        Method [ <internal:swoole> public method zDeleteRangeByRank ] {
        }

        Method [ <internal:swoole> public method zRemRangeByRank ] {
        }

        Method [ <internal:swoole> public method incrByFloat ] {
        }

        Method [ <internal:swoole> public method hIncrByFloat ] {
        }

        Method [ <internal:swoole> public method bitCount ] {
        }

        Method [ <internal:swoole> public method bitOp ] {
        }

        Method [ <internal:swoole> public method sAdd ] {
        }

        Method [ <internal:swoole> public method sMove ] {
        }

        Method [ <internal:swoole> public method sDiff ] {
        }

        Method [ <internal:swoole> public method sDiffStore ] {
        }

        Method [ <internal:swoole> public method sUnion ] {
        }

        Method [ <internal:swoole> public method sUnionStore ] {
        }

        Method [ <internal:swoole> public method sInter ] {
        }

        Method [ <internal:swoole> public method sInterStore ] {
        }

        Method [ <internal:swoole> public method sRemove ] {
        }

        Method [ <internal:swoole> public method srem ] {
        }

        Method [ <internal:swoole> public method zDelete ] {
        }

        Method [ <internal:swoole> public method zRemove ] {
        }

        Method [ <internal:swoole> public method zRem ] {
        }

        Method [ <internal:swoole> public method pSubscribe ] {
        }

        Method [ <internal:swoole> public method subscribe ] {
        }

        Method [ <internal:swoole> public method multi ] {
        }

        Method [ <internal:swoole> public method exec ] {
        }
      }
    }

    Class [ <internal:swoole> class Swoole\Coroutine\MySQL ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [9] {
        Property [ <default> private $serverInfo ]
        Property [ <default> public $sock ]
        Property [ <default> public $connected ]
        Property [ <default> public $connect_error ]
        Property [ <default> public $connect_errno ]
        Property [ <default> public $affected_rows ]
        Property [ <default> public $insert_id ]
        Property [ <default> public $error ]
        Property [ <default> public $errno ]
      }

      - Methods [8] {
        Method [ <internal:swoole, ctor> public method __construct ] {
        }

        Method [ <internal:swoole, dtor> public method __destruct ] {
        }

        Method [ <internal:swoole> public method connect ] {
        }

        Method [ <internal:swoole> public method query ] {
        }

        Method [ <internal:swoole> public method recv ] {
        }

        Method [ <internal:swoole> public method setDefer ] {
        }

        Method [ <internal:swoole> public method getDefer ] {
        }

        Method [ <internal:swoole> public method close ] {
        }
      }
    }

    Class [ <internal:swoole> class Swoole\Coroutine\MySQL\Exception extends Exception implements Throwable ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [4] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
      }

      - Methods [10] {
        Method [ <internal:Core, inherits Exception, ctor> public method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> public method __wakeup ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> public method __toString ] {
        }
      }
    }

    Class [ <internal:swoole> class Swoole\Coroutine\Http\Client ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [2] {
        Property [ <default> public $errCode ]
        Property [ <default> public $sock ]
      }

      - Methods [16] {
        Method [ <internal:swoole, ctor> public method __construct ] {
        }

        Method [ <internal:swoole, dtor> public method __destruct ] {
        }

        Method [ <internal:swoole> public method set ] {
        }

        Method [ <internal:swoole> public method setMethod ] {
        }

        Method [ <internal:swoole> public method setHeaders ] {
        }

        Method [ <internal:swoole> public method setCookies ] {
        }

        Method [ <internal:swoole> public method setData ] {
        }

        Method [ <internal:swoole> public method execute ] {
        }

        Method [ <internal:swoole> public method get ] {
        }

        Method [ <internal:swoole> public method post ] {
        }

        Method [ <internal:swoole> public method addFile ] {
        }

        Method [ <internal:swoole> public method isConnected ] {
        }

        Method [ <internal:swoole> public method close ] {
        }

        Method [ <internal:swoole> public method setDefer ] {
        }

        Method [ <internal:swoole> public method getDefer ] {
        }

        Method [ <internal:swoole> public method recv ] {
        }
      }
    }

    Class [ <internal:swoole> class Swoole\Coroutine ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [7] {
        Method [ <internal:swoole> static public method create ] {
        }

        Method [ <internal:swoole> static public method cli_wait ] {
        }

        Method [ <internal:swoole> static public method suspend ] {
        }

        Method [ <internal:swoole> static public method resume ] {
        }

        Method [ <internal:swoole> static public method getuid ] {
        }

        Method [ <internal:swoole> static public method call_user_func ] {
        }

        Method [ <internal:swoole> static public method call_user_func_array ] {
        }
      }

      - Properties [0] {
      }

      - Methods [0] {
      }
    }

    Class [ <internal:swoole> class Swoole\Http\Client ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [2] {
        Property [ <default> public $errCode ]
        Property [ <default> public $sock ]
      }

      - Methods [17] {
        Method [ <internal:swoole, ctor> public method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <required> $host ]
            Parameter #1 [ <optional> $port ]
            Parameter #2 [ <optional> $ssl ]
          }
        }

        Method [ <internal:swoole, dtor> public method __destruct ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole> public method set ] {

          - Parameters [1] {
            Parameter #0 [ <required> array $settings ]
          }
        }

        Method [ <internal:swoole> public method setMethod ] {

          - Parameters [1] {
            Parameter #0 [ <required> $method ]
          }
        }

        Method [ <internal:swoole> public method setHeaders ] {

          - Parameters [1] {
            Parameter #0 [ <required> array $headers ]
          }
        }

        Method [ <internal:swoole> public method setCookies ] {

          - Parameters [1] {
            Parameter #0 [ <required> array $cookies ]
          }
        }

        Method [ <internal:swoole> public method setData ] {

          - Parameters [1] {
            Parameter #0 [ <required> $data ]
          }
        }

        Method [ <internal:swoole> public method addFile ] {

          - Parameters [5] {
            Parameter #0 [ <required> $path ]
            Parameter #1 [ <required> $name ]
            Parameter #2 [ <optional> $type ]
            Parameter #3 [ <optional> $filename ]
            Parameter #4 [ <optional> $offset ]
          }
        }

        Method [ <internal:swoole> public method execute ] {

          - Parameters [2] {
            Parameter #0 [ <required> $path ]
            Parameter #1 [ <required> $callback ]
          }
        }

        Method [ <internal:swoole> public method push ] {

          - Parameters [3] {
            Parameter #0 [ <required> $data ]
            Parameter #1 [ <optional> $opcode ]
            Parameter #2 [ <optional> $finish ]
          }
        }

        Method [ <internal:swoole> public method get ] {

          - Parameters [2] {
            Parameter #0 [ <required> $path ]
            Parameter #1 [ <required> $callback ]
          }
        }

        Method [ <internal:swoole> public method post ] {

          - Parameters [3] {
            Parameter #0 [ <required> $path ]
            Parameter #1 [ <required> $data ]
            Parameter #2 [ <required> $callback ]
          }
        }

        Method [ <internal:swoole> public method upgrade ] {

          - Parameters [2] {
            Parameter #0 [ <required> $path ]
            Parameter #1 [ <required> $callback ]
          }
        }

        Method [ <internal:swoole> public method download ] {

          - Parameters [4] {
            Parameter #0 [ <required> $path ]
            Parameter #1 [ <required> $file ]
            Parameter #2 [ <required> $callback ]
            Parameter #3 [ <optional> $offset ]
          }
        }

        Method [ <internal:swoole> public method isConnected ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole> public method close ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole> public method on ] {

          - Parameters [2] {
            Parameter #0 [ <required> $event_name ]
            Parameter #1 [ <required> $callback ]
          }
        }
      }
    }

    Class [ <internal:swoole> class Swoole\Process ] {

      - Constants [1] {
        Constant [ integer IPC_NOWAIT ] { 256 }
      }

      - Static properties [0] {
      }

      - Static methods [6] {
        Method [ <internal:swoole> static public method wait ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $blocking ]
          }
        }

        Method [ <internal:swoole> static public method signal ] {

          - Parameters [2] {
            Parameter #0 [ <required> $signal_no ]
            Parameter #1 [ <required> $callback ]
          }
        }

        Method [ <internal:swoole> static public method alarm ] {

          - Parameters [1] {
            Parameter #0 [ <required> $usec ]
          }
        }

        Method [ <internal:swoole> static public method kill ] {

          - Parameters [2] {
            Parameter #0 [ <required> $pid ]
            Parameter #1 [ <optional> $signal_no ]
          }
        }

        Method [ <internal:swoole> static public method daemon ] {

          - Parameters [2] {
            Parameter #0 [ <optional> $nochdir ]
            Parameter #1 [ <optional> $noclose ]
          }
        }

        Method [ <internal:swoole> static public method setaffinity ] {

          - Parameters [1] {
            Parameter #0 [ <required> array $cpu_settings ]
          }
        }
      }

      - Properties [0] {
      }

      - Methods [14] {
        Method [ <internal:swoole, ctor> public method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <required> $callback ]
            Parameter #1 [ <optional> $redirect_stdin_and_stdout ]
            Parameter #2 [ <optional> $pipe_type ]
          }
        }

        Method [ <internal:swoole, dtor> public method __destruct ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole> public method useQueue ] {

          - Parameters [2] {
            Parameter #0 [ <required> $key ]
            Parameter #1 [ <optional> $mode ]
          }
        }

        Method [ <internal:swoole> public method statQueue ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole> public method freeQueue ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole> public method start ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole> public method write ] {

          - Parameters [1] {
            Parameter #0 [ <required> $data ]
          }
        }

        Method [ <internal:swoole> public method close ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole> public method read ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $size ]
          }
        }

        Method [ <internal:swoole> public method push ] {

          - Parameters [1] {
            Parameter #0 [ <required> $data ]
          }
        }

        Method [ <internal:swoole> public method pop ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $size ]
          }
        }

        Method [ <internal:swoole> public method exit ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $exit_code ]
          }
        }

        Method [ <internal:swoole> public method exec ] {

          - Parameters [2] {
            Parameter #0 [ <required> $exec_file ]
            Parameter #1 [ <required> $args ]
          }
        }

        Method [ <internal:swoole> public method name ] {

          - Parameters [1] {
            Parameter #0 [ <required> $process_name ]
          }
        }
      }
    }

    Class [ <internal:swoole> <iterateable> class Swoole\Table implements Iterator, Traversable, Countable ] {

      - Constants [3] {
        Constant [ integer TYPE_INT ] { 1 }
        Constant [ integer TYPE_STRING ] { 7 }
        Constant [ integer TYPE_FLOAT ] { 6 }
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [16] {
        Method [ <internal:swoole, ctor> public method __construct ] {

          - Parameters [1] {
            Parameter #0 [ <required> $table_size ]
          }
        }

        Method [ <internal:swoole> public method column ] {

          - Parameters [3] {
            Parameter #0 [ <required> $name ]
            Parameter #1 [ <required> $type ]
            Parameter #2 [ <optional> $size ]
          }
        }

        Method [ <internal:swoole> public method create ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole> public method destroy ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole> public method set ] {

          - Parameters [2] {
            Parameter #0 [ <required> $key ]
            Parameter #1 [ <required> array $value ]
          }
        }

        Method [ <internal:swoole> public method get ] {

          - Parameters [1] {
            Parameter #0 [ <required> $key ]
          }
        }

        Method [ <internal:swoole, prototype Countable> public method count ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole> public method del ] {

          - Parameters [1] {
            Parameter #0 [ <required> $key ]
          }
        }

        Method [ <internal:swoole> public method exist ] {

          - Parameters [1] {
            Parameter #0 [ <required> $key ]
          }
        }

        Method [ <internal:swoole> public method incr ] {

          - Parameters [3] {
            Parameter #0 [ <required> $key ]
            Parameter #1 [ <required> $column ]
            Parameter #2 [ <optional> $incrby ]
          }
        }

        Method [ <internal:swoole> public method decr ] {

          - Parameters [3] {
            Parameter #0 [ <required> $key ]
            Parameter #1 [ <required> $column ]
            Parameter #2 [ <optional> $decrby ]
          }
        }

        Method [ <internal:swoole, prototype Iterator> public method rewind ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole, prototype Iterator> public method next ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole, prototype Iterator> public method current ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole, prototype Iterator> public method key ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole, prototype Iterator> public method valid ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:swoole> class Swoole\Lock ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [7] {
        Method [ <internal:swoole, ctor> public method __construct ] {

          - Parameters [2] {
            Parameter #0 [ <optional> $type ]
            Parameter #1 [ <optional> $filename ]
          }
        }

        Method [ <internal:swoole, dtor> public method __destruct ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole> public method lock ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole> public method trylock ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole> public method lock_read ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole> public method trylock_read ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole> public method unlock ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:swoole> class Swoole\Atomic ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [6] {
        Method [ <internal:swoole, ctor> public method __construct ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $value ]
          }
        }

        Method [ <internal:swoole> public method add ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $add_value ]
          }
        }

        Method [ <internal:swoole> public method sub ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $sub_value ]
          }
        }

        Method [ <internal:swoole> public method get ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole> public method set ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:swoole> public method cmpset ] {

          - Parameters [2] {
            Parameter #0 [ <required> $cmp_value ]
            Parameter #1 [ <required> $new_value ]
          }
        }
      }
    }

    Class [ <internal:swoole> class Swoole\Http\Server extends Swoole\Server ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [1] {
        Property [ <default> private $global ]
      }

      - Methods [38] {
        Method [ <internal:swoole, overwrites Swoole\Server, prototype Swoole\Server> public method on ] {

          - Parameters [2] {
            Parameter #0 [ <required> $event_name ]
            Parameter #1 [ <required> $callback ]
          }
        }

        Method [ <internal:swoole, overwrites Swoole\Server, prototype Swoole\Server> public method start ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server, ctor> public method __construct ] {

          - Parameters [4] {
            Parameter #0 [ <required> $host ]
            Parameter #1 [ <optional> $port ]
            Parameter #2 [ <optional> $mode ]
            Parameter #3 [ <optional> $sock_type ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method listen ] {

          - Parameters [3] {
            Parameter #0 [ <required> $host ]
            Parameter #1 [ <required> $port ]
            Parameter #2 [ <required> $sock_type ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method addlistener ] {

          - Parameters [3] {
            Parameter #0 [ <required> $host ]
            Parameter #1 [ <required> $port ]
            Parameter #2 [ <required> $sock_type ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method set ] {

          - Parameters [1] {
            Parameter #0 [ <required> array $settings ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method send ] {

          - Parameters [3] {
            Parameter #0 [ <required> $fd ]
            Parameter #1 [ <required> $send_data ]
            Parameter #2 [ <optional> $reactor_id ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method sendto ] {

          - Parameters [4] {
            Parameter #0 [ <required> $ip ]
            Parameter #1 [ <required> $port ]
            Parameter #2 [ <required> $send_data ]
            Parameter #3 [ <optional> $server_socket ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method sendwait ] {

          - Parameters [2] {
            Parameter #0 [ <required> $conn_fd ]
            Parameter #1 [ <required> $send_data ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method exist ] {

          - Parameters [1] {
            Parameter #0 [ <required> $fd ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method protect ] {

          - Parameters [2] {
            Parameter #0 [ <required> $fd ]
            Parameter #1 [ <optional> $is_protected ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method sendfile ] {

          - Parameters [3] {
            Parameter #0 [ <required> $conn_fd ]
            Parameter #1 [ <required> $filename ]
            Parameter #2 [ <optional> $offset ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method close ] {

          - Parameters [2] {
            Parameter #0 [ <required> $fd ]
            Parameter #1 [ <optional> $reset ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method confirm ] {

          - Parameters [1] {
            Parameter #0 [ <required> $fd ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method pause ] {

          - Parameters [1] {
            Parameter #0 [ <required> $fd ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method resume ] {

          - Parameters [1] {
            Parameter #0 [ <required> $fd ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method task ] {

          - Parameters [3] {
            Parameter #0 [ <required> $data ]
            Parameter #1 [ <optional> $worker_id ]
            Parameter #2 [ <optional> $finish_callback ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method taskwait ] {

          - Parameters [3] {
            Parameter #0 [ <required> $data ]
            Parameter #1 [ <optional> $timeout ]
            Parameter #2 [ <optional> $worker_id ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method taskWaitMulti ] {

          - Parameters [2] {
            Parameter #0 [ <required> array $tasks ]
            Parameter #1 [ <optional> $timeout ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method finish ] {

          - Parameters [1] {
            Parameter #0 [ <required> $data ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method reload ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method shutdown ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method stop ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $worker_id ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method getLastError ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method heartbeat ] {

          - Parameters [1] {
            Parameter #0 [ <required> $reactor_id ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method connection_info ] {

          - Parameters [2] {
            Parameter #0 [ <required> $fd ]
            Parameter #1 [ <optional> $reactor_id ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method connection_list ] {

          - Parameters [2] {
            Parameter #0 [ <required> $start_fd ]
            Parameter #1 [ <optional> $find_count ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method getClientInfo ] {

          - Parameters [2] {
            Parameter #0 [ <required> $fd ]
            Parameter #1 [ <optional> $reactor_id ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method getClientList ] {

          - Parameters [2] {
            Parameter #0 [ <required> $start_fd ]
            Parameter #1 [ <optional> $find_count ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method after ] {

          - Parameters [3] {
            Parameter #0 [ <required> $ms ]
            Parameter #1 [ <required> $callback ]
            Parameter #2 [ <optional> $param ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method tick ] {

          - Parameters [2] {
            Parameter #0 [ <required> $ms ]
            Parameter #1 [ <required> $callback ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method clearTimer ] {

          - Parameters [1] {
            Parameter #0 [ <required> $timer_id ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method defer ] {

          - Parameters [1] {
            Parameter #0 [ <required> $callback ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method sendMessage ] {

          - Parameters [2] {
            Parameter #0 [ <required> $dst_worker_id ]
            Parameter #1 [ <required> $data ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method addProcess ] {

          - Parameters [1] {
            Parameter #0 [ <required> swoole_process $process ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method stats ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method getSocket ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $port ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method bind ] {

          - Parameters [2] {
            Parameter #0 [ <required> $fd ]
            Parameter #1 [ <required> $uid ]
          }
        }
      }
    }

    Class [ <internal:swoole> class Swoole\Http\Response ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [10] {
        Method [ <internal:swoole> public method initHeader ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole> public method cookie ] {

          - Parameters [7] {
            Parameter #0 [ <required> $name ]
            Parameter #1 [ <optional> $value ]
            Parameter #2 [ <optional> $expires ]
            Parameter #3 [ <optional> $path ]
            Parameter #4 [ <optional> $domain ]
            Parameter #5 [ <optional> $secure ]
            Parameter #6 [ <optional> $httponly ]
          }
        }

        Method [ <internal:swoole> public method rawcookie ] {

          - Parameters [7] {
            Parameter #0 [ <required> $name ]
            Parameter #1 [ <optional> $value ]
            Parameter #2 [ <optional> $expires ]
            Parameter #3 [ <optional> $path ]
            Parameter #4 [ <optional> $domain ]
            Parameter #5 [ <optional> $secure ]
            Parameter #6 [ <optional> $httponly ]
          }
        }

        Method [ <internal:swoole> public method status ] {

          - Parameters [1] {
            Parameter #0 [ <required> $http_code ]
          }
        }

        Method [ <internal:swoole> public method gzip ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $compress_level ]
          }
        }

        Method [ <internal:swoole> public method header ] {

          - Parameters [3] {
            Parameter #0 [ <required> $key ]
            Parameter #1 [ <required> $value ]
            Parameter #2 [ <optional> $ucwords ]
          }
        }

        Method [ <internal:swoole> public method write ] {

          - Parameters [1] {
            Parameter #0 [ <required> $content ]
          }
        }

        Method [ <internal:swoole> public method end ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $content ]
          }
        }

        Method [ <internal:swoole> public method sendfile ] {

          - Parameters [2] {
            Parameter #0 [ <required> $filename ]
            Parameter #1 [ <optional> $offset ]
          }
        }

        Method [ <internal:swoole, dtor> public method __destruct ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:swoole> class Swoole\Http\Request ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [2] {
        Method [ <internal:swoole> public method rawcontent ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole, dtor> public method __destruct ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:swoole> class Swoole\Buffer ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [10] {
        Method [ <internal:swoole, ctor> public method __construct ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $size ]
          }
        }

        Method [ <internal:swoole, dtor> public method __destruct ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole> public method __toString ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole> public method substr ] {

          - Parameters [3] {
            Parameter #0 [ <required> $offset ]
            Parameter #1 [ <optional> $length ]
            Parameter #2 [ <optional> $seek ]
          }
        }

        Method [ <internal:swoole> public method write ] {

          - Parameters [2] {
            Parameter #0 [ <required> $offset ]
            Parameter #1 [ <required> $data ]
          }
        }

        Method [ <internal:swoole> public method read ] {

          - Parameters [2] {
            Parameter #0 [ <required> $offset ]
            Parameter #1 [ <required> $length ]
          }
        }

        Method [ <internal:swoole> public method append ] {

          - Parameters [1] {
            Parameter #0 [ <required> $data ]
          }
        }

        Method [ <internal:swoole> public method expand ] {

          - Parameters [1] {
            Parameter #0 [ <required> $size ]
          }
        }

        Method [ <internal:swoole> public method recycle ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole> public method clear ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:swoole> class Swoole\WebSocket\Server extends Swoole\Http\Server ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [2] {
        Method [ <internal:swoole> static public method pack ] {

          - Parameters [4] {
            Parameter #0 [ <required> $data ]
            Parameter #1 [ <optional> $opcode ]
            Parameter #2 [ <optional> $finish ]
            Parameter #3 [ <optional> $mask ]
          }
        }

        Method [ <internal:swoole> static public method unpack ] {

          - Parameters [1] {
            Parameter #0 [ <required> $data ]
          }
        }
      }

      - Properties [0] {
      }

      - Methods [39] {
        Method [ <internal:swoole, overwrites Swoole\Http\Server, prototype Swoole\Server> public method on ] {

          - Parameters [2] {
            Parameter #0 [ <required> $event_name ]
            Parameter #1 [ <required> $callback ]
          }
        }

        Method [ <internal:swoole> public method push ] {

          - Parameters [4] {
            Parameter #0 [ <required> $fd ]
            Parameter #1 [ <required> $data ]
            Parameter #2 [ <optional> $opcode ]
            Parameter #3 [ <optional> $finish ]
          }
        }

        Method [ <internal:swoole, overwrites Swoole\Server, prototype Swoole\Server> public method exist ] {

          - Parameters [1] {
            Parameter #0 [ <required> $fd ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Http\Server, prototype Swoole\Server> public method start ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server, ctor> public method __construct ] {

          - Parameters [4] {
            Parameter #0 [ <required> $host ]
            Parameter #1 [ <optional> $port ]
            Parameter #2 [ <optional> $mode ]
            Parameter #3 [ <optional> $sock_type ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method listen ] {

          - Parameters [3] {
            Parameter #0 [ <required> $host ]
            Parameter #1 [ <required> $port ]
            Parameter #2 [ <required> $sock_type ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method addlistener ] {

          - Parameters [3] {
            Parameter #0 [ <required> $host ]
            Parameter #1 [ <required> $port ]
            Parameter #2 [ <required> $sock_type ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method set ] {

          - Parameters [1] {
            Parameter #0 [ <required> array $settings ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method send ] {

          - Parameters [3] {
            Parameter #0 [ <required> $fd ]
            Parameter #1 [ <required> $send_data ]
            Parameter #2 [ <optional> $reactor_id ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method sendto ] {

          - Parameters [4] {
            Parameter #0 [ <required> $ip ]
            Parameter #1 [ <required> $port ]
            Parameter #2 [ <required> $send_data ]
            Parameter #3 [ <optional> $server_socket ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method sendwait ] {

          - Parameters [2] {
            Parameter #0 [ <required> $conn_fd ]
            Parameter #1 [ <required> $send_data ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method protect ] {

          - Parameters [2] {
            Parameter #0 [ <required> $fd ]
            Parameter #1 [ <optional> $is_protected ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method sendfile ] {

          - Parameters [3] {
            Parameter #0 [ <required> $conn_fd ]
            Parameter #1 [ <required> $filename ]
            Parameter #2 [ <optional> $offset ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method close ] {

          - Parameters [2] {
            Parameter #0 [ <required> $fd ]
            Parameter #1 [ <optional> $reset ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method confirm ] {

          - Parameters [1] {
            Parameter #0 [ <required> $fd ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method pause ] {

          - Parameters [1] {
            Parameter #0 [ <required> $fd ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method resume ] {

          - Parameters [1] {
            Parameter #0 [ <required> $fd ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method task ] {

          - Parameters [3] {
            Parameter #0 [ <required> $data ]
            Parameter #1 [ <optional> $worker_id ]
            Parameter #2 [ <optional> $finish_callback ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method taskwait ] {

          - Parameters [3] {
            Parameter #0 [ <required> $data ]
            Parameter #1 [ <optional> $timeout ]
            Parameter #2 [ <optional> $worker_id ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method taskWaitMulti ] {

          - Parameters [2] {
            Parameter #0 [ <required> array $tasks ]
            Parameter #1 [ <optional> $timeout ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method finish ] {

          - Parameters [1] {
            Parameter #0 [ <required> $data ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method reload ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method shutdown ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method stop ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $worker_id ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method getLastError ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method heartbeat ] {

          - Parameters [1] {
            Parameter #0 [ <required> $reactor_id ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method connection_info ] {

          - Parameters [2] {
            Parameter #0 [ <required> $fd ]
            Parameter #1 [ <optional> $reactor_id ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method connection_list ] {

          - Parameters [2] {
            Parameter #0 [ <required> $start_fd ]
            Parameter #1 [ <optional> $find_count ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method getClientInfo ] {

          - Parameters [2] {
            Parameter #0 [ <required> $fd ]
            Parameter #1 [ <optional> $reactor_id ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method getClientList ] {

          - Parameters [2] {
            Parameter #0 [ <required> $start_fd ]
            Parameter #1 [ <optional> $find_count ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method after ] {

          - Parameters [3] {
            Parameter #0 [ <required> $ms ]
            Parameter #1 [ <required> $callback ]
            Parameter #2 [ <optional> $param ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method tick ] {

          - Parameters [2] {
            Parameter #0 [ <required> $ms ]
            Parameter #1 [ <required> $callback ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method clearTimer ] {

          - Parameters [1] {
            Parameter #0 [ <required> $timer_id ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method defer ] {

          - Parameters [1] {
            Parameter #0 [ <required> $callback ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method sendMessage ] {

          - Parameters [2] {
            Parameter #0 [ <required> $dst_worker_id ]
            Parameter #1 [ <required> $data ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method addProcess ] {

          - Parameters [1] {
            Parameter #0 [ <required> swoole_process $process ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method stats ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method getSocket ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $port ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method bind ] {

          - Parameters [2] {
            Parameter #0 [ <required> $fd ]
            Parameter #1 [ <required> $uid ]
          }
        }
      }
    }

    Class [ <internal:swoole> class Swoole\WebSocket\Frame ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [0] {
      }
    }

    Class [ <internal:swoole> class Swoole\MySQL ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [8] {
        Method [ <internal:swoole, ctor> public method __construct ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole, dtor> public method __destruct ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole> public method connect ] {

          - Parameters [2] {
            Parameter #0 [ <required> array $server_config ]
            Parameter #1 [ <required> $callback ]
          }
        }

        Method [ <internal:swoole> public method escape ] {

          - Parameters [2] {
            Parameter #0 [ <required> $string ]
            Parameter #1 [ <optional> $flags ]
          }
        }

        Method [ <internal:swoole> public method query ] {

          - Parameters [2] {
            Parameter #0 [ <required> $sql ]
            Parameter #1 [ <required> $callback ]
          }
        }

        Method [ <internal:swoole> public method getBuffer ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole> public method close ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole> public method on ] {

          - Parameters [2] {
            Parameter #0 [ <required> $event_name ]
            Parameter #1 [ <required> $callback ]
          }
        }
      }
    }

    Class [ <internal:swoole> class Swoole\MySQL\Exception extends Exception implements Throwable ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [4] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
      }

      - Methods [10] {
        Method [ <internal:Core, inherits Exception, ctor> public method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> public method __wakeup ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> public method __toString ] {
        }
      }
    }

    Class [ <internal:swoole> class Swoole\Module ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [0] {
      }
    }

    Class [ <internal:swoole> class Swoole\Mmap ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [1] {
        Method [ <internal:swoole> static public method open ] {

          - Parameters [3] {
            Parameter #0 [ <required> $filename ]
            Parameter #1 [ <optional> $size ]
            Parameter #2 [ <optional> $offset ]
          }
        }
      }

      - Properties [0] {
      }

      - Methods [0] {
      }
    }

    Class [ <internal:swoole> class Swoole\Channel ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [5] {
        Method [ <internal:swoole, ctor> public method __construct ] {

          - Parameters [1] {
            Parameter #0 [ <required> $size ]
          }
        }

        Method [ <internal:swoole, dtor> public method __destruct ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole> public method push ] {

          - Parameters [1] {
            Parameter #0 [ <required> $data ]
          }
        }

        Method [ <internal:swoole> public method pop ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole> public method stats ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:swoole> class Swoole\Http2\Client extends Swoole\Client ] {

      - Constants [4] {
        Constant [ integer MSG_OOB ] { 1 }
        Constant [ integer MSG_PEEK ] { 2 }
        Constant [ integer MSG_DONTWAIT ] { 64 }
        Constant [ integer MSG_WAITALL ] { 256 }
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [4] {
        Property [ <default> public $errCode ]
        Property [ <default> public $sock ]
        Property [ <default> public $reuse ]
        Property [ <default> public $reuseCount ]
      }

      - Methods [30] {
        Method [ <internal:swoole, overwrites Swoole\Client, ctor> public method __construct ] {
        }

        Method [ <internal:swoole, overwrites Swoole\Client, prototype Swoole\Client, dtor> public method __destruct ] {
        }

        Method [ <internal:swoole> public method setHeaders ] {
        }

        Method [ <internal:swoole> public method setCookies ] {
        }

        Method [ <internal:swoole> public method get ] {
        }

        Method [ <internal:swoole> public method post ] {
        }

        Method [ <internal:swoole> public method onConnect ] {
        }

        Method [ <internal:swoole> public method onError ] {
        }

        Method [ <internal:swoole> public method onReceive ] {
        }

        Method [ <internal:swoole> public method onClose ] {
        }

        Method [ <internal:swoole, inherits Swoole\Client> public method set ] {

          - Parameters [1] {
            Parameter #0 [ <required> array $settings ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Client> public method connect ] {

          - Parameters [4] {
            Parameter #0 [ <required> $host ]
            Parameter #1 [ <optional> $port ]
            Parameter #2 [ <optional> $timeout ]
            Parameter #3 [ <optional> $sock_flag ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Client> public method recv ] {

          - Parameters [2] {
            Parameter #0 [ <optional> $size ]
            Parameter #1 [ <optional> $flag ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Client> public method send ] {

          - Parameters [2] {
            Parameter #0 [ <required> $data ]
            Parameter #1 [ <optional> $flag ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Client> public method pipe ] {

          - Parameters [1] {
            Parameter #0 [ <required> $dst_socket ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Client> public method sendfile ] {

          - Parameters [2] {
            Parameter #0 [ <required> $filename ]
            Parameter #1 [ <optional> $offset ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Client> public method sendto ] {

          - Parameters [3] {
            Parameter #0 [ <required> $ip ]
            Parameter #1 [ <required> $port ]
            Parameter #2 [ <required> $data ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Client> public method sleep ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole, inherits Swoole\Client> public method wakeup ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole, inherits Swoole\Client> public method pause ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole, inherits Swoole\Client> public method resume ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole, inherits Swoole\Client> public method enableSSL ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $callback ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Client> public method getPeerCert ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole, inherits Swoole\Client> public method verifyPeerCert ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole, inherits Swoole\Client> public method isConnected ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole, inherits Swoole\Client> public method getsockname ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole, inherits Swoole\Client> public method getpeername ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole, inherits Swoole\Client> public method close ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $force ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Client> public method on ] {

          - Parameters [2] {
            Parameter #0 [ <required> $event_name ]
            Parameter #1 [ <required> $callback ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Client> public method getSocket ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:swoole> class Swoole\Http2\Response ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [0] {
      }
    }

    Class [ <internal:swoole> class Swoole\Serialize ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [2] {
        Method [ <internal:swoole> static public method pack ] {

          - Parameters [2] {
            Parameter #0 [ <required> $data ]
            Parameter #1 [ <optional> $flag ]
          }
        }

        Method [ <internal:swoole> static public method unpack ] {

          - Parameters [2] {
            Parameter #0 [ <required> $string ]
            Parameter #1 [ <optional> $args ]
          }
        }
      }

      - Properties [0] {
      }

      - Methods [0] {
      }
    }

    Class [ <internal:swoole> class Swoole\Redis ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [6] {
        Method [ <internal:swoole, ctor> public method __construct ] {
        }

        Method [ <internal:swoole, dtor> public method __destruct ] {
        }

        Method [ <internal:swoole> public method on ] {

          - Parameters [2] {
            Parameter #0 [ <required> $event_name ]
            Parameter #1 [ <required> $callback ]
          }
        }

        Method [ <internal:swoole> public method connect ] {

          - Parameters [3] {
            Parameter #0 [ <required> $host ]
            Parameter #1 [ <required> $port ]
            Parameter #2 [ <required> $callback ]
          }
        }

        Method [ <internal:swoole> public method close ] {
        }

        Method [ <internal:swoole> public method __call ] {

          - Parameters [2] {
            Parameter #0 [ <required> $command ]
            Parameter #1 [ <required> $params ]
          }
        }
      }
    }

    Class [ <internal:swoole> class Swoole\Redis\Server extends Swoole\Server ] {

      - Constants [7] {
        Constant [ integer NIL ] { 1 }
        Constant [ integer ERROR ] { 0 }
        Constant [ integer STATUS ] { 2 }
        Constant [ integer INT ] { 3 }
        Constant [ integer STRING ] { 4 }
        Constant [ integer SET ] { 5 }
        Constant [ integer MAP ] { 6 }
      }

      - Static properties [0] {
      }

      - Static methods [1] {
        Method [ <internal:swoole> static public method format ] {

          - Parameters [2] {
            Parameter #0 [ <required> $type ]
            Parameter #1 [ <optional> $value ]
          }
        }
      }

      - Properties [0] {
      }

      - Methods [39] {
        Method [ <internal:swoole, overwrites Swoole\Server, prototype Swoole\Server> public method start ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole> public method setHandler ] {

          - Parameters [4] {
            Parameter #0 [ <required> $command ]
            Parameter #1 [ <required> $callback ]
            Parameter #2 [ <optional> $number_of_string_param ]
            Parameter #3 [ <optional> $type_of_array_param ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server, ctor> public method __construct ] {

          - Parameters [4] {
            Parameter #0 [ <required> $host ]
            Parameter #1 [ <optional> $port ]
            Parameter #2 [ <optional> $mode ]
            Parameter #3 [ <optional> $sock_type ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method listen ] {

          - Parameters [3] {
            Parameter #0 [ <required> $host ]
            Parameter #1 [ <required> $port ]
            Parameter #2 [ <required> $sock_type ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method addlistener ] {

          - Parameters [3] {
            Parameter #0 [ <required> $host ]
            Parameter #1 [ <required> $port ]
            Parameter #2 [ <required> $sock_type ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method on ] {

          - Parameters [2] {
            Parameter #0 [ <required> $event_name ]
            Parameter #1 [ <required> $callback ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method set ] {

          - Parameters [1] {
            Parameter #0 [ <required> array $settings ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method send ] {

          - Parameters [3] {
            Parameter #0 [ <required> $fd ]
            Parameter #1 [ <required> $send_data ]
            Parameter #2 [ <optional> $reactor_id ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method sendto ] {

          - Parameters [4] {
            Parameter #0 [ <required> $ip ]
            Parameter #1 [ <required> $port ]
            Parameter #2 [ <required> $send_data ]
            Parameter #3 [ <optional> $server_socket ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method sendwait ] {

          - Parameters [2] {
            Parameter #0 [ <required> $conn_fd ]
            Parameter #1 [ <required> $send_data ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method exist ] {

          - Parameters [1] {
            Parameter #0 [ <required> $fd ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method protect ] {

          - Parameters [2] {
            Parameter #0 [ <required> $fd ]
            Parameter #1 [ <optional> $is_protected ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method sendfile ] {

          - Parameters [3] {
            Parameter #0 [ <required> $conn_fd ]
            Parameter #1 [ <required> $filename ]
            Parameter #2 [ <optional> $offset ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method close ] {

          - Parameters [2] {
            Parameter #0 [ <required> $fd ]
            Parameter #1 [ <optional> $reset ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method confirm ] {

          - Parameters [1] {
            Parameter #0 [ <required> $fd ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method pause ] {

          - Parameters [1] {
            Parameter #0 [ <required> $fd ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method resume ] {

          - Parameters [1] {
            Parameter #0 [ <required> $fd ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method task ] {

          - Parameters [3] {
            Parameter #0 [ <required> $data ]
            Parameter #1 [ <optional> $worker_id ]
            Parameter #2 [ <optional> $finish_callback ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method taskwait ] {

          - Parameters [3] {
            Parameter #0 [ <required> $data ]
            Parameter #1 [ <optional> $timeout ]
            Parameter #2 [ <optional> $worker_id ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method taskWaitMulti ] {

          - Parameters [2] {
            Parameter #0 [ <required> array $tasks ]
            Parameter #1 [ <optional> $timeout ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method finish ] {

          - Parameters [1] {
            Parameter #0 [ <required> $data ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method reload ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method shutdown ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method stop ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $worker_id ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method getLastError ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method heartbeat ] {

          - Parameters [1] {
            Parameter #0 [ <required> $reactor_id ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method connection_info ] {

          - Parameters [2] {
            Parameter #0 [ <required> $fd ]
            Parameter #1 [ <optional> $reactor_id ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method connection_list ] {

          - Parameters [2] {
            Parameter #0 [ <required> $start_fd ]
            Parameter #1 [ <optional> $find_count ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method getClientInfo ] {

          - Parameters [2] {
            Parameter #0 [ <required> $fd ]
            Parameter #1 [ <optional> $reactor_id ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method getClientList ] {

          - Parameters [2] {
            Parameter #0 [ <required> $start_fd ]
            Parameter #1 [ <optional> $find_count ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method after ] {

          - Parameters [3] {
            Parameter #0 [ <required> $ms ]
            Parameter #1 [ <required> $callback ]
            Parameter #2 [ <optional> $param ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method tick ] {

          - Parameters [2] {
            Parameter #0 [ <required> $ms ]
            Parameter #1 [ <required> $callback ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method clearTimer ] {

          - Parameters [1] {
            Parameter #0 [ <required> $timer_id ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method defer ] {

          - Parameters [1] {
            Parameter #0 [ <required> $callback ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method sendMessage ] {

          - Parameters [2] {
            Parameter #0 [ <required> $dst_worker_id ]
            Parameter #1 [ <required> $data ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method addProcess ] {

          - Parameters [1] {
            Parameter #0 [ <required> swoole_process $process ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method stats ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method getSocket ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $port ]
          }
        }

        Method [ <internal:swoole, inherits Swoole\Server> public method bind ] {

          - Parameters [2] {
            Parameter #0 [ <required> $fd ]
            Parameter #1 [ <required> $uid ]
          }
        }
      }
    }
  }
}

