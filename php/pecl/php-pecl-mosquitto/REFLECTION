Extension [ <persistent> extension #109 mosquitto version 0.4.0 ] {

  - Constants [7] {
    Constant [ integer MOSQ_LOG_INFO ] { 1 }
    Constant [ integer MOSQ_LOG_NOTICE ] { 2 }
    Constant [ integer MOSQ_LOG_WARNING ] { 4 }
    Constant [ integer MOSQ_LOG_ERR ] { 8 }
    Constant [ integer MOSQ_LOG_DEBUG ] { 16 }
    Constant [ integer 0 ] { 0 }
    Constant [ integer 1 ] { 1 }
  }

  - Classes [3] {
    Class [ <internal:mosquitto> class Mosquitto\Client ] {

      - Constants [7] {
        Constant [ integer LOG_INFO ] { 1 }
        Constant [ integer LOG_NOTICE ] { 2 }
        Constant [ integer LOG_WARNING ] { 4 }
        Constant [ integer LOG_ERR ] { 8 }
        Constant [ integer LOG_DEBUG ] { 16 }
        Constant [ integer SSL_VERIFY_NONE ] { 0 }
        Constant [ integer SSL_VERIFY_PEER ] { 1 }
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [27] {
        Method [ <internal:mosquitto, ctor> public method __construct ] {

          - Parameters [2] {
            Parameter #0 [ <required> $id ]
            Parameter #1 [ <required> $cleanSession ]
          }
        }

        Method [ <internal:mosquitto> public method onConnect ] {

          - Parameters [1] {
            Parameter #0 [ <required> callable $onConnect ]
          }
        }

        Method [ <internal:mosquitto> public method onDisconnect ] {

          - Parameters [1] {
            Parameter #0 [ <required> callable $onConnect ]
          }
        }

        Method [ <internal:mosquitto> public method onLog ] {

          - Parameters [1] {
            Parameter #0 [ <required> callable $onConnect ]
          }
        }

        Method [ <internal:mosquitto> public method onSubscribe ] {

          - Parameters [1] {
            Parameter #0 [ <required> callable $onConnect ]
          }
        }

        Method [ <internal:mosquitto> public method onUnsubscribe ] {

          - Parameters [1] {
            Parameter #0 [ <required> callable $onConnect ]
          }
        }

        Method [ <internal:mosquitto> public method onMessage ] {

          - Parameters [1] {
            Parameter #0 [ <required> callable $onConnect ]
          }
        }

        Method [ <internal:mosquitto> public method onPublish ] {

          - Parameters [1] {
            Parameter #0 [ <required> callable $onConnect ]
          }
        }

        Method [ <internal:mosquitto> public method getSocket ] {
        }

        Method [ <internal:mosquitto> public method setTlsCertificates ] {
        }

        Method [ <internal:mosquitto> public method setTlsInsecure ] {
        }

        Method [ <internal:mosquitto> public method setTlsOptions ] {
        }

        Method [ <internal:mosquitto> public method setTlsPSK ] {
        }

        Method [ <internal:mosquitto> public method setCredentials ] {

          - Parameters [2] {
            Parameter #0 [ <required> $username ]
            Parameter #1 [ <required> $password ]
          }
        }

        Method [ <internal:mosquitto> public method setWill ] {

          - Parameters [4] {
            Parameter #0 [ <required> $topic ]
            Parameter #1 [ <required> $payload ]
            Parameter #2 [ <required> $qos ]
            Parameter #3 [ <required> $retain ]
          }
        }

        Method [ <internal:mosquitto> public method clearWill ] {
        }

        Method [ <internal:mosquitto> public method setReconnectDelay ] {

          - Parameters [3] {
            Parameter #0 [ <required> $reconnectDelay ]
            Parameter #1 [ <required> $maxReconnectDelay ]
            Parameter #2 [ <required> $exponentialBackoff ]
          }
        }

        Method [ <internal:mosquitto> public method setMessageRetry ] {

          - Parameters [1] {
            Parameter #0 [ <required> $messageRetry ]
          }
        }

        Method [ <internal:mosquitto> public method connect ] {

          - Parameters [4] {
            Parameter #0 [ <required> $host ]
            Parameter #1 [ <required> $port ]
            Parameter #2 [ <required> $keepalive ]
            Parameter #3 [ <required> $interface ]
          }
        }

        Method [ <internal:mosquitto> public method disconnect ] {
        }

        Method [ <internal:mosquitto> public method setMaxInFlightMessages ] {

          - Parameters [1] {
            Parameter #0 [ <required> $max ]
          }
        }

        Method [ <internal:mosquitto> public method publish ] {

          - Parameters [4] {
            Parameter #0 [ <required> $topic ]
            Parameter #1 [ <required> $payload ]
            Parameter #2 [ <required> $qos ]
            Parameter #3 [ <required> $retain ]
          }
        }

        Method [ <internal:mosquitto> public method subscribe ] {

          - Parameters [2] {
            Parameter #0 [ <required> $topic ]
            Parameter #1 [ <required> $qos ]
          }
        }

        Method [ <internal:mosquitto> public method unsubscribe ] {

          - Parameters [1] {
            Parameter #0 [ <required> $topic ]
          }
        }

        Method [ <internal:mosquitto> public method loop ] {

          - Parameters [2] {
            Parameter #0 [ <required> $timeout ]
            Parameter #1 [ <required> $maxPackets ]
          }
        }

        Method [ <internal:mosquitto> public method loopForever ] {

          - Parameters [2] {
            Parameter #0 [ <required> $timeout ]
            Parameter #1 [ <required> $maxPackets ]
          }
        }

        Method [ <internal:mosquitto> public method exitLoop ] {
        }
      }
    }

    Class [ <internal:mosquitto> class Mosquitto\Exception extends Exception implements Throwable ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [4] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
      }

      - Methods [10] {
        Method [ <internal:Core, inherits Exception, ctor> public method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> public method __wakeup ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> public method __toString ] {
        }
      }
    }

    Class [ <internal:mosquitto> class Mosquitto\Message ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [2] {
        Method [ <internal:mosquitto> static public method topicMatchesSub ] {

          - Parameters [2] {
            Parameter #0 [ <required> $topic ]
            Parameter #1 [ <required> $subscription ]
          }
        }

        Method [ <internal:mosquitto> static public method tokeniseTopic ] {

          - Parameters [1] {
            Parameter #0 [ <required> $topic ]
          }
        }
      }

      - Properties [0] {
      }

      - Methods [1] {
        Method [ <internal:mosquitto, ctor> public method __construct ] {
        }
      }
    }
  }
}

