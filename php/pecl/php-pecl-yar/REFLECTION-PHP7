Extension [ <persistent> extension #175 yar version 2.0.2 ] {

  - Dependencies {
    Dependency [ json (Required) ]
    Dependency [ msgpack (Required) ]
  }

  - INI {
    Entry [ yar.packager <PERDIR> ]
      Current = 'msgpack'
    }
    Entry [ yar.transport <PERDIR> ]
      Current = 'curl'
    }
    Entry [ yar.debug <ALL> ]
      Current = 'Off'
    }
    Entry [ yar.expose_info <PERDIR> ]
      Current = 'On'
    }
    Entry [ yar.connect_timeout <ALL> ]
      Current = '1000'
    }
    Entry [ yar.timeout <ALL> ]
      Current = '5000'
    }
    Entry [ yar.content_type <ALL> ]
      Current = 'application/octet-stream'
    }
    Entry [ yar.allow_persistent <ALL> ]
      Current = '0'
    }
  }

  - Constants [18] {
    Constant [ string YAR_VERSION ] { 2.0.2 }
    Constant [ integer YAR_OPT_PACKAGER ] { 1 }
    Constant [ integer YAR_OPT_PERSISTENT ] { 2 }
    Constant [ integer YAR_OPT_TIMEOUT ] { 4 }
    Constant [ integer YAR_OPT_CONNECT_TIMEOUT ] { 8 }
    Constant [ integer YAR_CLIENT_PROTOCOL_HTTP ] { 1 }
    Constant [ integer YAR_CLIENT_PROTOCOL_TCP ] { 2 }
    Constant [ integer YAR_CLIENT_PROTOCOL_UNIX ] { 4 }
    Constant [ string YAR_PACKAGER_PHP ] { PHP }
    Constant [ string YAR_PACKAGER_JSON ] { JSON }
    Constant [ string YAR_PACKAGER_MSGPACK ] { MSGPACK }
    Constant [ integer YAR_ERR_OKEY ] { 0 }
    Constant [ integer YAR_ERR_OUTPUT ] { 8 }
    Constant [ integer YAR_ERR_TRANSPORT ] { 16 }
    Constant [ integer YAR_ERR_REQUEST ] { 4 }
    Constant [ integer YAR_ERR_PROTOCOL ] { 2 }
    Constant [ integer YAR_ERR_PACKAGER ] { 1 }
    Constant [ integer YAR_ERR_EXCEPTION ] { 64 }
  }

  - Classes [12] {
    Class [ <internal:yar> class Yar_Server ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [1] {
        Property [ <default> protected $_executor ]
      }

      - Methods [2] {
        Method [ <internal:yar, ctor> final public method __construct ] {

          - Parameters [2] {
            Parameter #0 [ <required> $obj ]
            Parameter #1 [ <optional> $protocol ]
          }
        }

        Method [ <internal:yar> public method handle ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:yar> class Yar_Client ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [4] {
        Property [ <default> protected $_protocol ]
        Property [ <default> protected $_uri ]
        Property [ <default> protected $_options ]
        Property [ <default> protected $_running ]
      }

      - Methods [5] {
        Method [ <internal:yar, ctor> final public method __construct ] {

          - Parameters [2] {
            Parameter #0 [ <required> $url ]
            Parameter #1 [ <optional> $async ]
          }
        }

        Method [ <internal:yar> public method call ] {

          - Parameters [2] {
            Parameter #0 [ <required> $method ]
            Parameter #1 [ <required> $parameters ]
          }
        }

        Method [ <internal:yar> public method __call ] {

          - Parameters [2] {
            Parameter #0 [ <required> $method ]
            Parameter #1 [ <required> $parameters ]
          }
        }

        Method [ <internal:yar> public method getOpt ] {

          - Parameters [1] {
            Parameter #0 [ <required> $type ]
          }
        }

        Method [ <internal:yar> public method setOpt ] {

          - Parameters [2] {
            Parameter #0 [ <required> $type ]
            Parameter #1 [ <required> $value ]
          }
        }
      }
    }

    Class [ <internal:yar> class Yar_Concurrent_Client ] {

      - Constants [0] {
      }

      - Static properties [4] {
        Property [ protected static $_callstack ]
        Property [ protected static $_callback ]
        Property [ protected static $_error_callback ]
        Property [ protected static $_start ]
      }

      - Static methods [3] {
        Method [ <internal:yar> static public method call ] {

          - Parameters [4] {
            Parameter #0 [ <required> $uri ]
            Parameter #1 [ <required> $method ]
            Parameter #2 [ <required> $parameters ]
            Parameter #3 [ <optional> $callback ]
          }
        }

        Method [ <internal:yar> static public method loop ] {

          - Parameters [2] {
            Parameter #0 [ <optional> $callback ]
            Parameter #1 [ <optional> $error_callback ]
          }
        }

        Method [ <internal:yar> static public method reset ] {
        }
      }

      - Properties [0] {
      }

      - Methods [0] {
      }
    }

    Class [ <internal:yar> class Yar_Server_Exception extends Exception implements Throwable ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [5] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
        Property [ <default> protected $_type ]
      }

      - Methods [11] {
        Method [ <internal:yar> public method getType ] {
        }

        Method [ <internal:Core, inherits Exception, ctor> public method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> public method __wakeup ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> public method __toString ] {
        }
      }
    }

    Class [ <internal:yar> class Yar_Server_Request_Exception extends Yar_Server_Exception implements Throwable ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [4] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
      }

      - Methods [11] {
        Method [ <internal:yar, inherits Yar_Server_Exception> public method getType ] {
        }

        Method [ <internal:Core, inherits Exception, ctor> public method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> public method __wakeup ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> public method __toString ] {
        }
      }
    }

    Class [ <internal:yar> class Yar_Server_Protocol_Exception extends Yar_Server_Exception implements Throwable ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [4] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
      }

      - Methods [11] {
        Method [ <internal:yar, inherits Yar_Server_Exception> public method getType ] {
        }

        Method [ <internal:Core, inherits Exception, ctor> public method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> public method __wakeup ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> public method __toString ] {
        }
      }
    }

    Class [ <internal:yar> class Yar_Server_Packager_Exception extends Yar_Server_Exception implements Throwable ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [4] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
      }

      - Methods [11] {
        Method [ <internal:yar, inherits Yar_Server_Exception> public method getType ] {
        }

        Method [ <internal:Core, inherits Exception, ctor> public method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> public method __wakeup ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> public method __toString ] {
        }
      }
    }

    Class [ <internal:yar> class Yar_Server_Output_Exception extends Yar_Server_Exception implements Throwable ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [4] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
      }

      - Methods [11] {
        Method [ <internal:yar, inherits Yar_Server_Exception> public method getType ] {
        }

        Method [ <internal:Core, inherits Exception, ctor> public method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> public method __wakeup ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> public method __toString ] {
        }
      }
    }

    Class [ <internal:yar> class Yar_Client_Exception extends Exception implements Throwable ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [4] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
      }

      - Methods [11] {
        Method [ <internal:yar> public method getType ] {
        }

        Method [ <internal:Core, inherits Exception, ctor> public method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> public method __wakeup ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> public method __toString ] {
        }
      }
    }

    Class [ <internal:yar> class Yar_Client_Transport_Exception extends Yar_Client_Exception implements Throwable ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [4] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
      }

      - Methods [11] {
        Method [ <internal:yar, inherits Yar_Client_Exception> public method getType ] {
        }

        Method [ <internal:Core, inherits Exception, ctor> public method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> public method __wakeup ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> public method __toString ] {
        }
      }
    }

    Class [ <internal:yar> class Yar_Client_Packager_Exception extends Yar_Client_Exception implements Throwable ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [4] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
      }

      - Methods [11] {
        Method [ <internal:yar, inherits Yar_Client_Exception> public method getType ] {
        }

        Method [ <internal:Core, inherits Exception, ctor> public method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> public method __wakeup ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> public method __toString ] {
        }
      }
    }

    Class [ <internal:yar> class Yar_Client_Protocol_Exception extends Yar_Client_Exception implements Throwable ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [4] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
      }

      - Methods [11] {
        Method [ <internal:yar, inherits Yar_Client_Exception> public method getType ] {
        }

        Method [ <internal:Core, inherits Exception, ctor> public method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> public method __wakeup ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> public method __toString ] {
        }
      }
    }
  }
}

