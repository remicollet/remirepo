Extension [ <persistent> extension #77 cassandra version 1.3.0 ] {

  - Dependencies {
    Dependency [ spl (Required) ]
  }

  - INI {
    Entry [ cassandra.log <ALL> ]
      Current = 'cassandra.log'
    }
    Entry [ cassandra.log_level <ALL> ]
      Current = 'ERROR'
    }
  }

  - Classes [100] {
    Interface [ <internal:cassandra> interface Cassandra\Exception ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [0] {
      }
    }

    Class [ <internal:cassandra> class Cassandra\Exception\InvalidArgumentException extends InvalidArgumentException implements Throwable, Cassandra\Exception ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [4] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
      }

      - Methods [10] {
        Method [ <internal:Core, inherits Exception, ctor> public method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> public method __wakeup ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> public method __toString ] {
        }
      }
    }

    Class [ <internal:cassandra> class Cassandra\Exception\DomainException extends DomainException implements Throwable, Cassandra\Exception ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [4] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
      }

      - Methods [10] {
        Method [ <internal:Core, inherits Exception, ctor> public method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> public method __wakeup ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> public method __toString ] {
        }
      }
    }

    Class [ <internal:cassandra> class Cassandra\Exception\RuntimeException extends RuntimeException implements Throwable, Cassandra\Exception ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [4] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
      }

      - Methods [10] {
        Method [ <internal:Core, inherits Exception, ctor> public method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> public method __wakeup ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> public method __toString ] {
        }
      }
    }

    Class [ <internal:cassandra> class Cassandra\Exception\TimeoutException extends Cassandra\Exception\RuntimeException implements Cassandra\Exception, Throwable ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [4] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
      }

      - Methods [10] {
        Method [ <internal:Core, inherits Exception, ctor> public method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> public method __wakeup ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> public method __toString ] {
        }
      }
    }

    Class [ <internal:cassandra> class Cassandra\Exception\LogicException extends LogicException implements Throwable, Cassandra\Exception ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [4] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
      }

      - Methods [10] {
        Method [ <internal:Core, inherits Exception, ctor> public method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> public method __wakeup ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> public method __toString ] {
        }
      }
    }

    Class [ <internal:cassandra> class Cassandra\Exception\ExecutionException extends Cassandra\Exception\RuntimeException implements Cassandra\Exception, Throwable ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [4] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
      }

      - Methods [10] {
        Method [ <internal:Core, inherits Exception, ctor> public method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> public method __wakeup ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> public method __toString ] {
        }
      }
    }

    Class [ <internal:cassandra> class Cassandra\Exception\ReadTimeoutException extends Cassandra\Exception\ExecutionException implements Throwable, Cassandra\Exception ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [4] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
      }

      - Methods [10] {
        Method [ <internal:Core, inherits Exception, ctor> public method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> public method __wakeup ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> public method __toString ] {
        }
      }
    }

    Class [ <internal:cassandra> class Cassandra\Exception\WriteTimeoutException extends Cassandra\Exception\ExecutionException implements Throwable, Cassandra\Exception ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [4] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
      }

      - Methods [10] {
        Method [ <internal:Core, inherits Exception, ctor> public method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> public method __wakeup ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> public method __toString ] {
        }
      }
    }

    Class [ <internal:cassandra> class Cassandra\Exception\UnavailableException extends Cassandra\Exception\ExecutionException implements Throwable, Cassandra\Exception ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [4] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
      }

      - Methods [10] {
        Method [ <internal:Core, inherits Exception, ctor> public method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> public method __wakeup ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> public method __toString ] {
        }
      }
    }

    Class [ <internal:cassandra> class Cassandra\Exception\TruncateException extends Cassandra\Exception\ExecutionException implements Throwable, Cassandra\Exception ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [4] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
      }

      - Methods [10] {
        Method [ <internal:Core, inherits Exception, ctor> public method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> public method __wakeup ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> public method __toString ] {
        }
      }
    }

    Class [ <internal:cassandra> class Cassandra\Exception\ValidationException extends Cassandra\Exception\RuntimeException implements Cassandra\Exception, Throwable ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [4] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
      }

      - Methods [10] {
        Method [ <internal:Core, inherits Exception, ctor> public method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> public method __wakeup ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> public method __toString ] {
        }
      }
    }

    Class [ <internal:cassandra> class Cassandra\Exception\InvalidQueryException extends Cassandra\Exception\ValidationException implements Throwable, Cassandra\Exception ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [4] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
      }

      - Methods [10] {
        Method [ <internal:Core, inherits Exception, ctor> public method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> public method __wakeup ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> public method __toString ] {
        }
      }
    }

    Class [ <internal:cassandra> class Cassandra\Exception\InvalidSyntaxException extends Cassandra\Exception\ValidationException implements Throwable, Cassandra\Exception ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [4] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
      }

      - Methods [10] {
        Method [ <internal:Core, inherits Exception, ctor> public method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> public method __wakeup ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> public method __toString ] {
        }
      }
    }

    Class [ <internal:cassandra> class Cassandra\Exception\UnauthorizedException extends Cassandra\Exception\ValidationException implements Throwable, Cassandra\Exception ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [4] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
      }

      - Methods [10] {
        Method [ <internal:Core, inherits Exception, ctor> public method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> public method __wakeup ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> public method __toString ] {
        }
      }
    }

    Class [ <internal:cassandra> class Cassandra\Exception\UnpreparedException extends Cassandra\Exception\ValidationException implements Throwable, Cassandra\Exception ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [4] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
      }

      - Methods [10] {
        Method [ <internal:Core, inherits Exception, ctor> public method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> public method __wakeup ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> public method __toString ] {
        }
      }
    }

    Class [ <internal:cassandra> class Cassandra\Exception\ConfigurationException extends Cassandra\Exception\ValidationException implements Throwable, Cassandra\Exception ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [4] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
      }

      - Methods [10] {
        Method [ <internal:Core, inherits Exception, ctor> public method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> public method __wakeup ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> public method __toString ] {
        }
      }
    }

    Class [ <internal:cassandra> class Cassandra\Exception\AlreadyExistsException extends Cassandra\Exception\ConfigurationException implements Cassandra\Exception, Throwable ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [4] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
      }

      - Methods [10] {
        Method [ <internal:Core, inherits Exception, ctor> public method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> public method __wakeup ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> public method __toString ] {
        }
      }
    }

    Class [ <internal:cassandra> class Cassandra\Exception\AuthenticationException extends Cassandra\Exception\RuntimeException implements Cassandra\Exception, Throwable ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [4] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
      }

      - Methods [10] {
        Method [ <internal:Core, inherits Exception, ctor> public method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> public method __wakeup ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> public method __toString ] {
        }
      }
    }

    Class [ <internal:cassandra> class Cassandra\Exception\ProtocolException extends Cassandra\Exception\RuntimeException implements Cassandra\Exception, Throwable ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [4] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
      }

      - Methods [10] {
        Method [ <internal:Core, inherits Exception, ctor> public method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> public method __wakeup ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> public method __toString ] {
        }
      }
    }

    Class [ <internal:cassandra> class Cassandra\Exception\ServerException extends Cassandra\Exception\RuntimeException implements Cassandra\Exception, Throwable ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [4] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
      }

      - Methods [10] {
        Method [ <internal:Core, inherits Exception, ctor> public method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> public method __wakeup ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> public method __toString ] {
        }
      }
    }

    Class [ <internal:cassandra> class Cassandra\Exception\IsBootstrappingException extends Cassandra\Exception\ServerException implements Throwable, Cassandra\Exception ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [4] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
      }

      - Methods [10] {
        Method [ <internal:Core, inherits Exception, ctor> public method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> public method __wakeup ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> public method __toString ] {
        }
      }
    }

    Class [ <internal:cassandra> class Cassandra\Exception\OverloadedException extends Cassandra\Exception\ServerException implements Throwable, Cassandra\Exception ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [4] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
      }

      - Methods [10] {
        Method [ <internal:Core, inherits Exception, ctor> public method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> public method __wakeup ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> public method __toString ] {
        }
      }
    }

    Class [ <internal:cassandra> class Cassandra\Exception\RangeException extends RangeException implements Throwable, Cassandra\Exception ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [4] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
      }

      - Methods [10] {
        Method [ <internal:Core, inherits Exception, ctor> public method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> public method __wakeup ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> public method __toString ] {
        }
      }
    }

    Class [ <internal:cassandra> class Cassandra\Exception\DivideByZeroException extends Cassandra\Exception\RangeException implements Cassandra\Exception, Throwable ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [4] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
      }

      - Methods [10] {
        Method [ <internal:Core, inherits Exception, ctor> public method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> public method __wakeup ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> public method __toString ] {
        }
      }
    }

    Interface [ <internal:cassandra> interface Cassandra\Value ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [1] {
        Method [ <internal:cassandra> abstract public method type ] {

          - Parameters [0] {
          }
        }
      }
    }

    Interface [ <internal:cassandra> interface Cassandra\Numeric ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [10] {
        Method [ <internal:cassandra> abstract public method add ] {

          - Parameters [1] {
            Parameter #0 [ <required> $num ]
          }
        }

        Method [ <internal:cassandra> abstract public method sub ] {

          - Parameters [1] {
            Parameter #0 [ <required> $num ]
          }
        }

        Method [ <internal:cassandra> abstract public method mul ] {

          - Parameters [1] {
            Parameter #0 [ <required> $num ]
          }
        }

        Method [ <internal:cassandra> abstract public method div ] {

          - Parameters [1] {
            Parameter #0 [ <required> $num ]
          }
        }

        Method [ <internal:cassandra> abstract public method mod ] {

          - Parameters [1] {
            Parameter #0 [ <required> $num ]
          }
        }

        Method [ <internal:cassandra> abstract public method abs ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> abstract public method neg ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> abstract public method sqrt ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> abstract public method toInt ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> abstract public method toDouble ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:cassandra> final class Cassandra\Bigint implements Cassandra\Value, Cassandra\Numeric ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [2] {
        Method [ <internal:cassandra> static public method min ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> static public method max ] {

          - Parameters [0] {
          }
        }
      }

      - Properties [0] {
      }

      - Methods [14] {
        Method [ <internal:cassandra, ctor> public method __construct ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:cassandra> public method __toString ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Value> public method type ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> public method value ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Numeric> public method add ] {

          - Parameters [1] {
            Parameter #0 [ <required> $num ]
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Numeric> public method sub ] {

          - Parameters [1] {
            Parameter #0 [ <required> $num ]
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Numeric> public method mul ] {

          - Parameters [1] {
            Parameter #0 [ <required> $num ]
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Numeric> public method div ] {

          - Parameters [1] {
            Parameter #0 [ <required> $num ]
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Numeric> public method mod ] {

          - Parameters [1] {
            Parameter #0 [ <required> $num ]
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Numeric> public method abs ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Numeric> public method neg ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Numeric> public method sqrt ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Numeric> public method toInt ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Numeric> public method toDouble ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:cassandra> final class Cassandra\Smallint implements Cassandra\Value, Cassandra\Numeric ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [2] {
        Method [ <internal:cassandra> static public method min ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> static public method max ] {

          - Parameters [0] {
          }
        }
      }

      - Properties [0] {
      }

      - Methods [14] {
        Method [ <internal:cassandra, ctor> public method __construct ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:cassandra> public method __toString ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Value> public method type ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> public method value ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Numeric> public method add ] {

          - Parameters [1] {
            Parameter #0 [ <required> $num ]
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Numeric> public method sub ] {

          - Parameters [1] {
            Parameter #0 [ <required> $num ]
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Numeric> public method mul ] {

          - Parameters [1] {
            Parameter #0 [ <required> $num ]
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Numeric> public method div ] {

          - Parameters [1] {
            Parameter #0 [ <required> $num ]
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Numeric> public method mod ] {

          - Parameters [1] {
            Parameter #0 [ <required> $num ]
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Numeric> public method abs ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Numeric> public method neg ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Numeric> public method sqrt ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Numeric> public method toInt ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Numeric> public method toDouble ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:cassandra> final class Cassandra\Tinyint implements Cassandra\Value, Cassandra\Numeric ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [2] {
        Method [ <internal:cassandra> static public method min ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> static public method max ] {

          - Parameters [0] {
          }
        }
      }

      - Properties [0] {
      }

      - Methods [14] {
        Method [ <internal:cassandra, ctor> public method __construct ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:cassandra> public method __toString ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Value> public method type ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> public method value ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Numeric> public method add ] {

          - Parameters [1] {
            Parameter #0 [ <required> $num ]
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Numeric> public method sub ] {

          - Parameters [1] {
            Parameter #0 [ <required> $num ]
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Numeric> public method mul ] {

          - Parameters [1] {
            Parameter #0 [ <required> $num ]
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Numeric> public method div ] {

          - Parameters [1] {
            Parameter #0 [ <required> $num ]
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Numeric> public method mod ] {

          - Parameters [1] {
            Parameter #0 [ <required> $num ]
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Numeric> public method abs ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Numeric> public method neg ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Numeric> public method sqrt ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Numeric> public method toInt ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Numeric> public method toDouble ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:cassandra> final class Cassandra\Blob implements Cassandra\Value ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [5] {
        Method [ <internal:cassandra, ctor> public method __construct ] {

          - Parameters [1] {
            Parameter #0 [ <required> $bytes ]
          }
        }

        Method [ <internal:cassandra> public method __toString ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Value> public method type ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> public method bytes ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> public method toBinaryString ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:cassandra> final class Cassandra\Decimal implements Cassandra\Value, Cassandra\Numeric ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [15] {
        Method [ <internal:cassandra, ctor> public method __construct ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:cassandra> public method __toString ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Value> public method type ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> public method value ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> public method scale ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Numeric> public method add ] {

          - Parameters [1] {
            Parameter #0 [ <required> $num ]
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Numeric> public method sub ] {

          - Parameters [1] {
            Parameter #0 [ <required> $num ]
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Numeric> public method mul ] {

          - Parameters [1] {
            Parameter #0 [ <required> $num ]
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Numeric> public method div ] {

          - Parameters [1] {
            Parameter #0 [ <required> $num ]
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Numeric> public method mod ] {

          - Parameters [1] {
            Parameter #0 [ <required> $num ]
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Numeric> public method abs ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Numeric> public method neg ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Numeric> public method sqrt ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Numeric> public method toInt ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Numeric> public method toDouble ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:cassandra> final class Cassandra\Float implements Cassandra\Value, Cassandra\Numeric ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [2] {
        Method [ <internal:cassandra> static public method min ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> static public method max ] {

          - Parameters [0] {
          }
        }
      }

      - Properties [0] {
      }

      - Methods [17] {
        Method [ <internal:cassandra, ctor> public method __construct ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:cassandra> public method __toString ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Value> public method type ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> public method value ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> public method isInfinite ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> public method isFinite ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> public method isNaN ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Numeric> public method add ] {

          - Parameters [1] {
            Parameter #0 [ <required> $num ]
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Numeric> public method sub ] {

          - Parameters [1] {
            Parameter #0 [ <required> $num ]
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Numeric> public method mul ] {

          - Parameters [1] {
            Parameter #0 [ <required> $num ]
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Numeric> public method div ] {

          - Parameters [1] {
            Parameter #0 [ <required> $num ]
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Numeric> public method mod ] {

          - Parameters [1] {
            Parameter #0 [ <required> $num ]
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Numeric> public method abs ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Numeric> public method neg ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Numeric> public method sqrt ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Numeric> public method toInt ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Numeric> public method toDouble ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:cassandra> final class Cassandra\Inet implements Cassandra\Value ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [4] {
        Method [ <internal:cassandra, ctor> public method __construct ] {

          - Parameters [1] {
            Parameter #0 [ <required> $address ]
          }
        }

        Method [ <internal:cassandra> public method __toString ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Value> public method type ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> public method address ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:cassandra> final class Cassandra\Timestamp implements Cassandra\Value ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [6] {
        Method [ <internal:cassandra, ctor> public method __construct ] {

          - Parameters [2] {
            Parameter #0 [ <optional> $seconds ]
            Parameter #1 [ <optional> $microseconds ]
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Value> public method type ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> public method time ] {
        }

        Method [ <internal:cassandra> public method microtime ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $get_as_float ]
          }
        }

        Method [ <internal:cassandra> public method toDateTime ] {
        }

        Method [ <internal:cassandra> public method __toString ] {
        }
      }
    }

    Class [ <internal:cassandra> final class Cassandra\Date implements Cassandra\Value ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [1] {
        Method [ <internal:cassandra> static public method fromDateTime ] {

          - Parameters [1] {
            Parameter #0 [ <required> DateTime $datetime ]
          }
        }
      }

      - Properties [0] {
      }

      - Methods [5] {
        Method [ <internal:cassandra, ctor> public method __construct ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $seconds ]
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Value> public method type ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> public method seconds ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> public method toDateTime ] {

          - Parameters [1] {
            Parameter #0 [ <optional> Cassandra\Time $time ]
          }
        }

        Method [ <internal:cassandra> public method __toString ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:cassandra> final class Cassandra\Time implements Cassandra\Value ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [1] {
        Method [ <internal:cassandra> static public method fromDateTime ] {

          - Parameters [1] {
            Parameter #0 [ <required> DateTime $datetime ]
          }
        }
      }

      - Properties [0] {
      }

      - Methods [4] {
        Method [ <internal:cassandra, ctor> public method __construct ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $nanoseconds ]
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Value> public method type ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> public method seconds ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> public method __toString ] {

          - Parameters [0] {
          }
        }
      }
    }

    Interface [ <internal:cassandra> interface Cassandra\UuidInterface ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [2] {
        Method [ <internal:cassandra> abstract public method uuid ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> abstract public method version ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:cassandra> final class Cassandra\Timeuuid implements Cassandra\Value, Cassandra\UuidInterface ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [7] {
        Method [ <internal:cassandra, ctor> public method __construct ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $timestamp ]
          }
        }

        Method [ <internal:cassandra> public method __toString ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Value> public method type ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\UuidInterface> public method uuid ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\UuidInterface> public method version ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> public method time ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> public method toDateTime ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:cassandra> final class Cassandra\Uuid implements Cassandra\Value, Cassandra\UuidInterface ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [5] {
        Method [ <internal:cassandra, ctor> public method __construct ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $uuid ]
          }
        }

        Method [ <internal:cassandra> public method __toString ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Value> public method type ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\UuidInterface> public method uuid ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\UuidInterface> public method version ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:cassandra> final class Cassandra\Varint implements Cassandra\Value, Cassandra\Numeric ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [14] {
        Method [ <internal:cassandra, ctor> public method __construct ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:cassandra> public method __toString ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Value> public method type ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> public method value ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Numeric> public method add ] {

          - Parameters [1] {
            Parameter #0 [ <required> $num ]
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Numeric> public method sub ] {

          - Parameters [1] {
            Parameter #0 [ <required> $num ]
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Numeric> public method mul ] {

          - Parameters [1] {
            Parameter #0 [ <required> $num ]
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Numeric> public method div ] {

          - Parameters [1] {
            Parameter #0 [ <required> $num ]
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Numeric> public method mod ] {

          - Parameters [1] {
            Parameter #0 [ <required> $num ]
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Numeric> public method abs ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Numeric> public method neg ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Numeric> public method sqrt ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Numeric> public method toInt ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Numeric> public method toDouble ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:cassandra> abstract class Cassandra\Custom implements Cassandra\Value ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [1] {
        Method [ <internal:cassandra, inherits Cassandra\Value> abstract public method type ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:cassandra> final class Cassandra\Duration implements Cassandra\Value ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [6] {
        Method [ <internal:cassandra, ctor> public method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <required> $months ]
            Parameter #1 [ <required> $days ]
            Parameter #2 [ <required> $nanos ]
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Value> public method type ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> public method months ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> public method days ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> public method nanos ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> public method __toString ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:cassandra> <iterateable> final class Cassandra\Set implements Cassandra\Value, Countable, Iterator, Traversable ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [12] {
        Method [ <internal:cassandra, ctor> public method __construct ] {

          - Parameters [1] {
            Parameter #0 [ <required> $type ]
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Value> public method type ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> public method values ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> public method add ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:cassandra> public method has ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:cassandra> public method remove ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:cassandra, prototype Countable> public method count ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Iterator> public method current ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Iterator> public method key ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Iterator> public method next ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Iterator> public method valid ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Iterator> public method rewind ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:cassandra> <iterateable> final class Cassandra\Map implements Cassandra\Value, Countable, Iterator, Traversable, ArrayAccess ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [18] {
        Method [ <internal:cassandra, ctor> public method __construct ] {

          - Parameters [2] {
            Parameter #0 [ <required> $keyType ]
            Parameter #1 [ <required> $valueType ]
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Value> public method type ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> public method keys ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> public method values ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> public method set ] {

          - Parameters [2] {
            Parameter #0 [ <required> $key ]
            Parameter #1 [ <required> $value ]
          }
        }

        Method [ <internal:cassandra> public method get ] {

          - Parameters [1] {
            Parameter #0 [ <required> $key ]
          }
        }

        Method [ <internal:cassandra> public method remove ] {

          - Parameters [1] {
            Parameter #0 [ <required> $key ]
          }
        }

        Method [ <internal:cassandra> public method has ] {

          - Parameters [1] {
            Parameter #0 [ <required> $key ]
          }
        }

        Method [ <internal:cassandra, prototype Countable> public method count ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Iterator> public method current ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Iterator> public method key ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Iterator> public method next ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Iterator> public method valid ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Iterator> public method rewind ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype ArrayAccess> public method offsetSet ] {

          - Parameters [2] {
            Parameter #0 [ <required> $key ]
            Parameter #1 [ <required> $value ]
          }
        }

        Method [ <internal:cassandra, prototype ArrayAccess> public method offsetGet ] {

          - Parameters [1] {
            Parameter #0 [ <required> $key ]
          }
        }

        Method [ <internal:cassandra, prototype ArrayAccess> public method offsetUnset ] {

          - Parameters [1] {
            Parameter #0 [ <required> $key ]
          }
        }

        Method [ <internal:cassandra, prototype ArrayAccess> public method offsetExists ] {

          - Parameters [1] {
            Parameter #0 [ <required> $key ]
          }
        }
      }
    }

    Class [ <internal:cassandra> <iterateable> final class Cassandra\Collection implements Cassandra\Value, Countable, Iterator, Traversable ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [13] {
        Method [ <internal:cassandra, ctor> public method __construct ] {

          - Parameters [1] {
            Parameter #0 [ <required> $type ]
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Value> public method type ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> public method values ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> public method add ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:cassandra> public method get ] {

          - Parameters [1] {
            Parameter #0 [ <required> $index ]
          }
        }

        Method [ <internal:cassandra> public method find ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:cassandra, prototype Countable> public method count ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Iterator> public method current ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Iterator> public method key ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Iterator> public method next ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Iterator> public method valid ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Iterator> public method rewind ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> public method remove ] {

          - Parameters [1] {
            Parameter #0 [ <required> $index ]
          }
        }
      }
    }

    Class [ <internal:cassandra> <iterateable> final class Cassandra\Tuple implements Cassandra\Value, Countable, Iterator, Traversable ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [11] {
        Method [ <internal:cassandra, ctor> public method __construct ] {

          - Parameters [1] {
            Parameter #0 [ <required> $types ]
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Value> public method type ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> public method values ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> public method set ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:cassandra> public method get ] {

          - Parameters [1] {
            Parameter #0 [ <required> $index ]
          }
        }

        Method [ <internal:cassandra, prototype Countable> public method count ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Iterator> public method current ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Iterator> public method key ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Iterator> public method next ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Iterator> public method valid ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Iterator> public method rewind ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:cassandra> <iterateable> final class Cassandra\UserTypeValue implements Cassandra\Value, Countable, Iterator, Traversable ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [11] {
        Method [ <internal:cassandra, ctor> public method __construct ] {

          - Parameters [1] {
            Parameter #0 [ <required> $types ]
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Value> public method type ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> public method values ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> public method set ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:cassandra> public method get ] {

          - Parameters [1] {
            Parameter #0 [ <required> $name ]
          }
        }

        Method [ <internal:cassandra, prototype Countable> public method count ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Iterator> public method current ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Iterator> public method key ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Iterator> public method next ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Iterator> public method valid ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Iterator> public method rewind ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:cassandra> final class Cassandra ] {

      - Constants [44] {
        Constant [ integer CONSISTENCY_ANY ] { 0 }
        Constant [ integer CONSISTENCY_ONE ] { 1 }
        Constant [ integer CONSISTENCY_TWO ] { 2 }
        Constant [ integer CONSISTENCY_THREE ] { 3 }
        Constant [ integer CONSISTENCY_QUORUM ] { 4 }
        Constant [ integer CONSISTENCY_ALL ] { 5 }
        Constant [ integer CONSISTENCY_LOCAL_QUORUM ] { 6 }
        Constant [ integer CONSISTENCY_EACH_QUORUM ] { 7 }
        Constant [ integer CONSISTENCY_SERIAL ] { 8 }
        Constant [ integer CONSISTENCY_LOCAL_SERIAL ] { 9 }
        Constant [ integer CONSISTENCY_LOCAL_ONE ] { 10 }
        Constant [ integer VERIFY_NONE ] { 0 }
        Constant [ integer VERIFY_PEER_CERT ] { 1 }
        Constant [ integer VERIFY_PEER_IDENTITY ] { 2 }
        Constant [ integer BATCH_LOGGED ] { 0 }
        Constant [ integer BATCH_UNLOGGED ] { 1 }
        Constant [ integer BATCH_COUNTER ] { 2 }
        Constant [ integer LOG_DISABLED ] { 0 }
        Constant [ integer LOG_CRITICAL ] { 1 }
        Constant [ integer LOG_ERROR ] { 2 }
        Constant [ integer LOG_WARN ] { 3 }
        Constant [ integer LOG_INFO ] { 4 }
        Constant [ integer LOG_DEBUG ] { 5 }
        Constant [ integer LOG_TRACE ] { 6 }
        Constant [ string TYPE_TEXT ] { text }
        Constant [ string TYPE_ASCII ] { ascii }
        Constant [ string TYPE_VARCHAR ] { varchar }
        Constant [ string TYPE_BIGINT ] { bigint }
        Constant [ string TYPE_SMALLINT ] { smallint }
        Constant [ string TYPE_TINYINT ] { tinyint }
        Constant [ string TYPE_BLOB ] { blob }
        Constant [ string TYPE_BOOLEAN ] { boolean }
        Constant [ string TYPE_COUNTER ] { counter }
        Constant [ string TYPE_DECIMAL ] { decimal }
        Constant [ string TYPE_DOUBLE ] { double }
        Constant [ string TYPE_FLOAT ] { float }
        Constant [ string TYPE_INT ] { int }
        Constant [ string TYPE_TIMESTAMP ] { timestamp }
        Constant [ string TYPE_UUID ] { uuid }
        Constant [ string TYPE_VARINT ] { varint }
        Constant [ string TYPE_TIMEUUID ] { timeuuid }
        Constant [ string TYPE_INET ] { inet }
        Constant [ string VERSION ] { 1.3.0 }
        Constant [ string CPP_DRIVER_VERSION ] { 2.6.0 }
      }

      - Static properties [0] {
      }

      - Static methods [2] {
        Method [ <internal:cassandra> static public method cluster ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> static public method ssl ] {

          - Parameters [0] {
          }
        }
      }

      - Properties [0] {
      }

      - Methods [0] {
      }
    }

    Interface [ <internal:cassandra> interface Cassandra\Cluster ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [2] {
        Method [ <internal:cassandra> abstract public method connect ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $keyspace ]
          }
        }

        Method [ <internal:cassandra> abstract public method connectAsync ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $keyspace ]
          }
        }
      }
    }

    Class [ <internal:cassandra> final class Cassandra\DefaultCluster implements Cassandra\Cluster ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [2] {
        Method [ <internal:cassandra, prototype Cassandra\Cluster> public method connect ] {

          - Parameters [2] {
            Parameter #0 [ <optional> $keyspace ]
            Parameter #1 [ <optional> $timeout ]
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Cluster> public method connectAsync ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $keyspace ]
          }
        }
      }
    }

    Class [ <internal:cassandra> final class Cassandra\Cluster\Builder ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [31] {
        Method [ <internal:cassandra> public method build ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> public method withDefaultConsistency ] {

          - Parameters [1] {
            Parameter #0 [ <required> $consistency ]
          }
        }

        Method [ <internal:cassandra> public method withDefaultPageSize ] {

          - Parameters [1] {
            Parameter #0 [ <required> $pageSize ]
          }
        }

        Method [ <internal:cassandra> public method withDefaultTimeout ] {

          - Parameters [1] {
            Parameter #0 [ <required> $timeout ]
          }
        }

        Method [ <internal:cassandra> public method withContactPoints ] {

          - Parameters [1] {
            Parameter #0 [ <required> $host ]
          }
        }

        Method [ <internal:cassandra> public method withPort ] {

          - Parameters [1] {
            Parameter #0 [ <required> $port ]
          }
        }

        Method [ <internal:cassandra> public method withRoundRobinLoadBalancingPolicy ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> public method withDatacenterAwareRoundRobinLoadBalancingPolicy ] {

          - Parameters [3] {
            Parameter #0 [ <required> $localDatacenter ]
            Parameter #1 [ <required> $hostPerRemoteDatacenter ]
            Parameter #2 [ <required> $useRemoteDatacenterForLocalConsistencies ]
          }
        }

        Method [ <internal:cassandra> public method withBlackListHosts ] {

          - Parameters [1] {
            Parameter #0 [ <required> $hosts ]
          }
        }

        Method [ <internal:cassandra> public method withWhiteListHosts ] {

          - Parameters [1] {
            Parameter #0 [ <required> $hosts ]
          }
        }

        Method [ <internal:cassandra> public method withBlackListDCs ] {

          - Parameters [1] {
            Parameter #0 [ <required> $dcs ]
          }
        }

        Method [ <internal:cassandra> public method withWhiteListDCs ] {

          - Parameters [1] {
            Parameter #0 [ <required> $dcs ]
          }
        }

        Method [ <internal:cassandra> public method withTokenAwareRouting ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $enabled ]
          }
        }

        Method [ <internal:cassandra> public method withCredentials ] {

          - Parameters [2] {
            Parameter #0 [ <required> $username ]
            Parameter #1 [ <required> $password ]
          }
        }

        Method [ <internal:cassandra> public method withConnectTimeout ] {

          - Parameters [1] {
            Parameter #0 [ <required> $timeout ]
          }
        }

        Method [ <internal:cassandra> public method withRequestTimeout ] {

          - Parameters [1] {
            Parameter #0 [ <required> $timeout ]
          }
        }

        Method [ <internal:cassandra> public method withSSL ] {

          - Parameters [1] {
            Parameter #0 [ <required> Cassandra\SSLOptions $options ]
          }
        }

        Method [ <internal:cassandra> public method withPersistentSessions ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $enabled ]
          }
        }

        Method [ <internal:cassandra> public method withProtocolVersion ] {

          - Parameters [1] {
            Parameter #0 [ <required> $version ]
          }
        }

        Method [ <internal:cassandra> public method withIOThreads ] {

          - Parameters [1] {
            Parameter #0 [ <required> $count ]
          }
        }

        Method [ <internal:cassandra> public method withConnectionsPerHost ] {

          - Parameters [2] {
            Parameter #0 [ <required> $core ]
            Parameter #1 [ <optional> $max ]
          }
        }

        Method [ <internal:cassandra> public method withReconnectInterval ] {

          - Parameters [1] {
            Parameter #0 [ <required> $interval ]
          }
        }

        Method [ <internal:cassandra> public method withLatencyAwareRouting ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $enabled ]
          }
        }

        Method [ <internal:cassandra> public method withTCPNodelay ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $enabled ]
          }
        }

        Method [ <internal:cassandra> public method withTCPKeepalive ] {

          - Parameters [1] {
            Parameter #0 [ <required> $delay ]
          }
        }

        Method [ <internal:cassandra> public method withRetryPolicy ] {

          - Parameters [1] {
            Parameter #0 [ <required> Cassandra\RetryPolicy $policy ]
          }
        }

        Method [ <internal:cassandra> public method withTimestampGenerator ] {

          - Parameters [1] {
            Parameter #0 [ <required> Cassandra\TimestampGenerator $generator ]
          }
        }

        Method [ <internal:cassandra> public method withSchemaMetadata ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $enabled ]
          }
        }

        Method [ <internal:cassandra> public method withHostnameResolution ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $enabled ]
          }
        }

        Method [ <internal:cassandra> public method withRandomizedContactPoints ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $enabled ]
          }
        }

        Method [ <internal:cassandra> public method withConnectionHeartbeatInterval ] {

          - Parameters [1] {
            Parameter #0 [ <required> $interval ]
          }
        }
      }
    }

    Interface [ <internal:cassandra> interface Cassandra\Future ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [1] {
        Method [ <internal:cassandra> abstract public method get ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $timeout ]
          }
        }
      }
    }

    Class [ <internal:cassandra> final class Cassandra\FuturePreparedStatement implements Cassandra\Future ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [1] {
        Method [ <internal:cassandra, prototype Cassandra\Future> public method get ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $timeout ]
          }
        }
      }
    }

    Class [ <internal:cassandra> final class Cassandra\FutureRows implements Cassandra\Future ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [1] {
        Method [ <internal:cassandra, prototype Cassandra\Future> public method get ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $timeout ]
          }
        }
      }
    }

    Class [ <internal:cassandra> final class Cassandra\FutureSession implements Cassandra\Future ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [1] {
        Method [ <internal:cassandra, prototype Cassandra\Future> public method get ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $timeout ]
          }
        }
      }
    }

    Class [ <internal:cassandra> final class Cassandra\FutureValue implements Cassandra\Future ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [1] {
        Method [ <internal:cassandra, prototype Cassandra\Future> public method get ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $timeout ]
          }
        }
      }
    }

    Class [ <internal:cassandra> final class Cassandra\FutureClose implements Cassandra\Future ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [1] {
        Method [ <internal:cassandra, prototype Cassandra\Future> public method get ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $timeout ]
          }
        }
      }
    }

    Interface [ <internal:cassandra> interface Cassandra\Session ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [8] {
        Method [ <internal:cassandra> abstract public method execute ] {

          - Parameters [2] {
            Parameter #0 [ <required> $statement ]
            Parameter #1 [ <optional> $options ]
          }
        }

        Method [ <internal:cassandra> abstract public method executeAsync ] {

          - Parameters [2] {
            Parameter #0 [ <required> $statement ]
            Parameter #1 [ <optional> $options ]
          }
        }

        Method [ <internal:cassandra> abstract public method prepare ] {

          - Parameters [2] {
            Parameter #0 [ <required> $cql ]
            Parameter #1 [ <optional> $options ]
          }
        }

        Method [ <internal:cassandra> abstract public method prepareAsync ] {

          - Parameters [2] {
            Parameter #0 [ <required> $cql ]
            Parameter #1 [ <optional> $options ]
          }
        }

        Method [ <internal:cassandra> abstract public method close ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $timeout ]
          }
        }

        Method [ <internal:cassandra> abstract public method closeAsync ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> abstract public method metrics ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> abstract public method schema ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:cassandra> final class Cassandra\DefaultSession implements Cassandra\Session ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [8] {
        Method [ <internal:cassandra, prototype Cassandra\Session> public method execute ] {

          - Parameters [2] {
            Parameter #0 [ <required> $statement ]
            Parameter #1 [ <optional> $options ]
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Session> public method executeAsync ] {

          - Parameters [2] {
            Parameter #0 [ <required> $statement ]
            Parameter #1 [ <optional> $options ]
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Session> public method prepare ] {

          - Parameters [2] {
            Parameter #0 [ <required> $cql ]
            Parameter #1 [ <optional> $options ]
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Session> public method prepareAsync ] {

          - Parameters [2] {
            Parameter #0 [ <required> $cql ]
            Parameter #1 [ <optional> $options ]
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Session> public method close ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $timeout ]
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Session> public method closeAsync ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Session> public method metrics ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Session> public method schema ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:cassandra> final class Cassandra\SSLOptions ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [0] {
      }
    }

    Class [ <internal:cassandra> final class Cassandra\SSLOptions\Builder ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [5] {
        Method [ <internal:cassandra> public method build ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> public method withTrustedCerts ] {

          - Parameters [1] {
            Parameter #0 [ <required> $path ]
          }
        }

        Method [ <internal:cassandra> public method withVerifyFlags ] {

          - Parameters [1] {
            Parameter #0 [ <required> $flags ]
          }
        }

        Method [ <internal:cassandra> public method withClientCert ] {

          - Parameters [1] {
            Parameter #0 [ <required> $path ]
          }
        }

        Method [ <internal:cassandra> public method withPrivateKey ] {

          - Parameters [2] {
            Parameter #0 [ <required> $path ]
            Parameter #1 [ <optional> $passphrase ]
          }
        }
      }
    }

    Interface [ <internal:cassandra> interface Cassandra\Statement ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [0] {
      }
    }

    Class [ <internal:cassandra> final class Cassandra\SimpleStatement implements Cassandra\Statement ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [1] {
        Method [ <internal:cassandra, ctor> public method __construct ] {

          - Parameters [1] {
            Parameter #0 [ <required> $cql ]
          }
        }
      }
    }

    Class [ <internal:cassandra> final class Cassandra\PreparedStatement implements Cassandra\Statement ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [1] {
        Method [ <internal:cassandra, ctor> private method __construct ] {
        }
      }
    }

    Class [ <internal:cassandra> final class Cassandra\BatchStatement implements Cassandra\Statement ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [2] {
        Method [ <internal:cassandra, ctor> public method __construct ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $type ]
          }
        }

        Method [ <internal:cassandra> public method add ] {

          - Parameters [2] {
            Parameter #0 [ <required> $statement ]
            Parameter #1 [ <optional> array or NULL $arguments ]
          }
        }
      }
    }

    Class [ <internal:cassandra> final class Cassandra\ExecutionOptions ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [2] {
        Method [ <internal, deprecated:cassandra, ctor> public method __construct ] {

          - Parameters [1] {
            Parameter #0 [ <optional> array or NULL $options ]
          }
        }

        Method [ <internal:cassandra> public method __get ] {

          - Parameters [1] {
            Parameter #0 [ <required> $name ]
          }
        }
      }
    }

    Class [ <internal:cassandra> <iterateable> final class Cassandra\Rows implements Iterator, Traversable, ArrayAccess ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [16] {
        Method [ <internal:cassandra, ctor> public method __construct ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> public method count ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Iterator> public method rewind ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Iterator> public method current ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Iterator> public method key ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Iterator> public method next ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Iterator> public method valid ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype ArrayAccess> public method offsetExists ] {

          - Parameters [1] {
            Parameter #0 [ <required> $offset ]
          }
        }

        Method [ <internal:cassandra, prototype ArrayAccess> public method offsetGet ] {

          - Parameters [1] {
            Parameter #0 [ <required> $offset ]
          }
        }

        Method [ <internal:cassandra, prototype ArrayAccess> public method offsetSet ] {

          - Parameters [2] {
            Parameter #0 [ <required> $offset ]
            Parameter #1 [ <required> $value ]
          }
        }

        Method [ <internal:cassandra, prototype ArrayAccess> public method offsetUnset ] {

          - Parameters [1] {
            Parameter #0 [ <required> $offset ]
          }
        }

        Method [ <internal:cassandra> public method isLastPage ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> public method nextPage ] {

          - Parameters [1] {
            Parameter #0 [ <required> $timeout ]
          }
        }

        Method [ <internal:cassandra> public method nextPageAsync ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> public method pagingStateToken ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> public method first ] {

          - Parameters [0] {
          }
        }
      }
    }

    Interface [ <internal:cassandra> interface Cassandra\Schema ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [2] {
        Method [ <internal:cassandra> abstract public method keyspace ] {

          - Parameters [1] {
            Parameter #0 [ <required> $name ]
          }
        }

        Method [ <internal:cassandra> abstract public method keyspaces ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:cassandra> final class Cassandra\DefaultSchema implements Cassandra\Schema ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [3] {
        Method [ <internal:cassandra, prototype Cassandra\Schema> public method keyspace ] {

          - Parameters [1] {
            Parameter #0 [ <required> $name ]
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Schema> public method keyspaces ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> public method version ] {

          - Parameters [0] {
          }
        }
      }
    }

    Interface [ <internal:cassandra> interface Cassandra\Keyspace ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [14] {
        Method [ <internal:cassandra> abstract public method name ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> abstract public method replicationClassName ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> abstract public method replicationOptions ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> abstract public method hasDurableWrites ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> abstract public method table ] {

          - Parameters [1] {
            Parameter #0 [ <required> $name ]
          }
        }

        Method [ <internal:cassandra> abstract public method tables ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> abstract public method userType ] {

          - Parameters [1] {
            Parameter #0 [ <required> $name ]
          }
        }

        Method [ <internal:cassandra> abstract public method userTypes ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> abstract public method materializedView ] {

          - Parameters [1] {
            Parameter #0 [ <required> $name ]
          }
        }

        Method [ <internal:cassandra> abstract public method materializedViews ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> abstract public method function ] {

          - Parameters [2] {
            Parameter #0 [ <required> $name ]
            Parameter #1 [ <optional> $... ]
          }
        }

        Method [ <internal:cassandra> abstract public method functions ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> abstract public method aggregate ] {

          - Parameters [2] {
            Parameter #0 [ <required> $name ]
            Parameter #1 [ <optional> $... ]
          }
        }

        Method [ <internal:cassandra> abstract public method aggregates ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:cassandra> final class Cassandra\DefaultKeyspace implements Cassandra\Keyspace ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [14] {
        Method [ <internal:cassandra, prototype Cassandra\Keyspace> public method name ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Keyspace> public method replicationClassName ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Keyspace> public method replicationOptions ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Keyspace> public method hasDurableWrites ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Keyspace> public method table ] {

          - Parameters [1] {
            Parameter #0 [ <required> $name ]
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Keyspace> public method tables ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Keyspace> public method userType ] {

          - Parameters [1] {
            Parameter #0 [ <required> $name ]
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Keyspace> public method userTypes ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Keyspace> public method materializedView ] {

          - Parameters [1] {
            Parameter #0 [ <required> $name ]
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Keyspace> public method materializedViews ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Keyspace> public method function ] {

          - Parameters [2] {
            Parameter #0 [ <required> $name ]
            Parameter #1 [ <optional> $... ]
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Keyspace> public method functions ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Keyspace> public method aggregate ] {

          - Parameters [2] {
            Parameter #0 [ <required> $name ]
            Parameter #1 [ <optional> $... ]
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Keyspace> public method aggregates ] {

          - Parameters [0] {
          }
        }
      }
    }

    Interface [ <internal:cassandra> interface Cassandra\Table ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [26] {
        Method [ <internal:cassandra> abstract public method name ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> abstract public method option ] {

          - Parameters [1] {
            Parameter #0 [ <required> $name ]
          }
        }

        Method [ <internal:cassandra> abstract public method options ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> abstract public method comment ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> abstract public method readRepairChance ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> abstract public method localReadRepairChance ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> abstract public method gcGraceSeconds ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> abstract public method caching ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> abstract public method bloomFilterFPChance ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> abstract public method memtableFlushPeriodMs ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> abstract public method defaultTTL ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> abstract public method speculativeRetry ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> abstract public method indexInterval ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> abstract public method compactionStrategyClassName ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> abstract public method compactionStrategyOptions ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> abstract public method compressionParameters ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> abstract public method populateIOCacheOnFlush ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> abstract public method replicateOnWrite ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> abstract public method maxIndexInterval ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> abstract public method minIndexInterval ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> abstract public method column ] {

          - Parameters [1] {
            Parameter #0 [ <required> $name ]
          }
        }

        Method [ <internal:cassandra> abstract public method columns ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> abstract public method partitionKey ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> abstract public method primaryKey ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> abstract public method clusteringKey ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> abstract public method clusteringOrder ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:cassandra> final class Cassandra\DefaultTable implements Cassandra\Table ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [30] {
        Method [ <internal:cassandra, prototype Cassandra\Table> public method name ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Table> public method option ] {

          - Parameters [1] {
            Parameter #0 [ <required> $name ]
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Table> public method options ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Table> public method comment ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Table> public method readRepairChance ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Table> public method localReadRepairChance ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Table> public method gcGraceSeconds ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Table> public method caching ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Table> public method bloomFilterFPChance ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Table> public method memtableFlushPeriodMs ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Table> public method defaultTTL ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Table> public method speculativeRetry ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Table> public method indexInterval ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Table> public method compactionStrategyClassName ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Table> public method compactionStrategyOptions ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Table> public method compressionParameters ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Table> public method populateIOCacheOnFlush ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Table> public method replicateOnWrite ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Table> public method maxIndexInterval ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Table> public method minIndexInterval ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Table> public method column ] {

          - Parameters [1] {
            Parameter #0 [ <required> $name ]
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Table> public method columns ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Table> public method partitionKey ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Table> public method primaryKey ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Table> public method clusteringKey ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Table> public method clusteringOrder ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> public method index ] {

          - Parameters [1] {
            Parameter #0 [ <required> $name ]
          }
        }

        Method [ <internal:cassandra> public method indexes ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> public method materializedView ] {

          - Parameters [1] {
            Parameter #0 [ <required> $name ]
          }
        }

        Method [ <internal:cassandra> public method materializedViews ] {

          - Parameters [0] {
          }
        }
      }
    }

    Interface [ <internal:cassandra> interface Cassandra\Column ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [7] {
        Method [ <internal:cassandra> abstract public method name ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> abstract public method type ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> abstract public method isReversed ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> abstract public method isStatic ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> abstract public method isFrozen ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> abstract public method indexName ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> abstract public method indexOptions ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:cassandra> final class Cassandra\DefaultColumn implements Cassandra\Column ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [7] {
        Method [ <internal:cassandra, prototype Cassandra\Column> public method name ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Column> public method type ] {

          - Parameters [0] {
          }
        }

        Method [ <internal, deprecated:cassandra, prototype Cassandra\Column> public method isReversed ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Column> public method isStatic ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Column> public method isFrozen ] {

          - Parameters [0] {
          }
        }

        Method [ <internal, deprecated:cassandra, prototype Cassandra\Column> public method indexName ] {

          - Parameters [0] {
          }
        }

        Method [ <internal, deprecated:cassandra, prototype Cassandra\Column> public method indexOptions ] {

          - Parameters [0] {
          }
        }
      }
    }

    Interface [ <internal:cassandra> interface Cassandra\Index ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [7] {
        Method [ <internal:cassandra> abstract public method name ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> abstract public method kind ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> abstract public method target ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> abstract public method option ] {

          - Parameters [1] {
            Parameter #0 [ <required> $name ]
          }
        }

        Method [ <internal:cassandra> abstract public method options ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> abstract public method className ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> abstract public method isCustom ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:cassandra> final class Cassandra\DefaultIndex implements Cassandra\Index ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [7] {
        Method [ <internal:cassandra, prototype Cassandra\Index> public method name ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Index> public method kind ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Index> public method target ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Index> public method option ] {

          - Parameters [1] {
            Parameter #0 [ <required> $name ]
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Index> public method options ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Index> public method className ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Index> public method isCustom ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:cassandra> abstract class Cassandra\MaterializedView implements Cassandra\Table ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [27] {
        Method [ <internal:cassandra> abstract public method baseTable ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Table> abstract public method name ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Table> abstract public method option ] {

          - Parameters [1] {
            Parameter #0 [ <required> $name ]
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Table> abstract public method options ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Table> abstract public method comment ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Table> abstract public method readRepairChance ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Table> abstract public method localReadRepairChance ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Table> abstract public method gcGraceSeconds ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Table> abstract public method caching ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Table> abstract public method bloomFilterFPChance ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Table> abstract public method memtableFlushPeriodMs ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Table> abstract public method defaultTTL ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Table> abstract public method speculativeRetry ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Table> abstract public method indexInterval ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Table> abstract public method compactionStrategyClassName ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Table> abstract public method compactionStrategyOptions ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Table> abstract public method compressionParameters ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Table> abstract public method populateIOCacheOnFlush ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Table> abstract public method replicateOnWrite ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Table> abstract public method maxIndexInterval ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Table> abstract public method minIndexInterval ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Table> abstract public method column ] {

          - Parameters [1] {
            Parameter #0 [ <required> $name ]
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Table> abstract public method columns ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Table> abstract public method partitionKey ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Table> abstract public method primaryKey ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Table> abstract public method clusteringKey ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Table> abstract public method clusteringOrder ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:cassandra> final class Cassandra\DefaultMaterializedView extends Cassandra\MaterializedView implements Cassandra\Table ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [27] {
        Method [ <internal:cassandra, overwrites Cassandra\Table, prototype Cassandra\Table> public method name ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, overwrites Cassandra\Table, prototype Cassandra\Table> public method option ] {

          - Parameters [1] {
            Parameter #0 [ <required> $name ]
          }
        }

        Method [ <internal:cassandra, overwrites Cassandra\Table, prototype Cassandra\Table> public method options ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, overwrites Cassandra\Table, prototype Cassandra\Table> public method comment ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, overwrites Cassandra\Table, prototype Cassandra\Table> public method readRepairChance ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, overwrites Cassandra\Table, prototype Cassandra\Table> public method localReadRepairChance ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, overwrites Cassandra\Table, prototype Cassandra\Table> public method gcGraceSeconds ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, overwrites Cassandra\Table, prototype Cassandra\Table> public method caching ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, overwrites Cassandra\Table, prototype Cassandra\Table> public method bloomFilterFPChance ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, overwrites Cassandra\Table, prototype Cassandra\Table> public method memtableFlushPeriodMs ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, overwrites Cassandra\Table, prototype Cassandra\Table> public method defaultTTL ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, overwrites Cassandra\Table, prototype Cassandra\Table> public method speculativeRetry ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, overwrites Cassandra\Table, prototype Cassandra\Table> public method indexInterval ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, overwrites Cassandra\Table, prototype Cassandra\Table> public method compactionStrategyClassName ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, overwrites Cassandra\Table, prototype Cassandra\Table> public method compactionStrategyOptions ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, overwrites Cassandra\Table, prototype Cassandra\Table> public method compressionParameters ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, overwrites Cassandra\Table, prototype Cassandra\Table> public method populateIOCacheOnFlush ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, overwrites Cassandra\Table, prototype Cassandra\Table> public method replicateOnWrite ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, overwrites Cassandra\Table, prototype Cassandra\Table> public method maxIndexInterval ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, overwrites Cassandra\Table, prototype Cassandra\Table> public method minIndexInterval ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, overwrites Cassandra\Table, prototype Cassandra\Table> public method column ] {

          - Parameters [1] {
            Parameter #0 [ <required> $name ]
          }
        }

        Method [ <internal:cassandra, overwrites Cassandra\Table, prototype Cassandra\Table> public method columns ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, overwrites Cassandra\Table, prototype Cassandra\Table> public method partitionKey ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, overwrites Cassandra\Table, prototype Cassandra\Table> public method primaryKey ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, overwrites Cassandra\Table, prototype Cassandra\Table> public method clusteringKey ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, overwrites Cassandra\Table, prototype Cassandra\Table> public method clusteringOrder ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, overwrites Cassandra\MaterializedView, prototype Cassandra\MaterializedView> public method baseTable ] {

          - Parameters [0] {
          }
        }
      }
    }

    Interface [ <internal:cassandra> interface Cassandra\Function ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [8] {
        Method [ <internal:cassandra> abstract public method name ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> abstract public method simpleName ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> abstract public method arguments ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> abstract public method returnType ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> abstract public method signature ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> abstract public method language ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> abstract public method body ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> abstract public method isCalledOnNullInput ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:cassandra> final class Cassandra\DefaultFunction implements Cassandra\Function ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [8] {
        Method [ <internal:cassandra, prototype Cassandra\Function> public method name ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Function> public method simpleName ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Function> public method arguments ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Function> public method returnType ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Function> public method signature ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Function> public method language ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Function> public method body ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Function> public method isCalledOnNullInput ] {

          - Parameters [0] {
          }
        }
      }
    }

    Interface [ <internal:cassandra> interface Cassandra\Aggregate ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [9] {
        Method [ <internal:cassandra> abstract public method name ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> abstract public method simpleName ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> abstract public method argumentTypes ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> abstract public method finalFunction ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> abstract public method stateFunction ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> abstract public method initialCondition ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> abstract public method returnType ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> abstract public method stateType ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> abstract public method signature ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:cassandra> final class Cassandra\DefaultAggregate implements Cassandra\Aggregate ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [9] {
        Method [ <internal:cassandra, prototype Cassandra\Aggregate> public method name ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Aggregate> public method simpleName ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Aggregate> public method argumentTypes ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Aggregate> public method stateFunction ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Aggregate> public method finalFunction ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Aggregate> public method initialCondition ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Aggregate> public method stateType ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Aggregate> public method returnType ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, prototype Cassandra\Aggregate> public method signature ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:cassandra> abstract class Cassandra\Type ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [26] {
        Method [ <internal:cassandra> final static public method ascii ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> final static public method bigint ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> final static public method smallint ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> final static public method tinyint ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> final static public method blob ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> final static public method boolean ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> final static public method counter ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> final static public method decimal ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> final static public method double ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> final static public method duration ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> final static public method float ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> final static public method int ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> final static public method text ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> final static public method timestamp ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> final static public method date ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> final static public method time ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> final static public method uuid ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> final static public method varchar ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> final static public method varint ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> final static public method timeuuid ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> final static public method inet ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> final static public method collection ] {

          - Parameters [1] {
            Parameter #0 [ <required> Cassandra\Type $type ]
          }
        }

        Method [ <internal:cassandra> final static public method set ] {

          - Parameters [1] {
            Parameter #0 [ <required> Cassandra\Type $type ]
          }
        }

        Method [ <internal:cassandra> final static public method map ] {

          - Parameters [2] {
            Parameter #0 [ <required> Cassandra\Type $keyType ]
            Parameter #1 [ <required> Cassandra\Type $valueType ]
          }
        }

        Method [ <internal:cassandra> final static public method tuple ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $types ]
          }
        }

        Method [ <internal:cassandra> final static public method userType ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $types ]
          }
        }
      }

      - Properties [0] {
      }

      - Methods [2] {
        Method [ <internal:cassandra> abstract public method name ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> abstract public method __toString ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:cassandra> final class Cassandra\Type\Scalar extends Cassandra\Type ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [26] {
        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method ascii ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method bigint ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method smallint ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method tinyint ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method blob ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method boolean ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method counter ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method decimal ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method double ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method duration ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method float ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method int ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method text ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method timestamp ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method date ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method time ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method uuid ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method varchar ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method varint ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method timeuuid ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method inet ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method collection ] {

          - Parameters [1] {
            Parameter #0 [ <required> Cassandra\Type $type ]
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method set ] {

          - Parameters [1] {
            Parameter #0 [ <required> Cassandra\Type $type ]
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method map ] {

          - Parameters [2] {
            Parameter #0 [ <required> Cassandra\Type $keyType ]
            Parameter #1 [ <required> Cassandra\Type $valueType ]
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method tuple ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $types ]
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method userType ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $types ]
          }
        }
      }

      - Properties [0] {
      }

      - Methods [4] {
        Method [ <internal:cassandra, ctor> private method __construct ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, overwrites Cassandra\Type, prototype Cassandra\Type> public method name ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, overwrites Cassandra\Type, prototype Cassandra\Type> public method __toString ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> public method create ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $value ]
          }
        }
      }
    }

    Class [ <internal:cassandra> final class Cassandra\Type\Collection extends Cassandra\Type ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [26] {
        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method ascii ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method bigint ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method smallint ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method tinyint ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method blob ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method boolean ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method counter ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method decimal ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method double ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method duration ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method float ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method int ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method text ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method timestamp ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method date ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method time ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method uuid ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method varchar ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method varint ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method timeuuid ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method inet ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method collection ] {

          - Parameters [1] {
            Parameter #0 [ <required> Cassandra\Type $type ]
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method set ] {

          - Parameters [1] {
            Parameter #0 [ <required> Cassandra\Type $type ]
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method map ] {

          - Parameters [2] {
            Parameter #0 [ <required> Cassandra\Type $keyType ]
            Parameter #1 [ <required> Cassandra\Type $valueType ]
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method tuple ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $types ]
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method userType ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $types ]
          }
        }
      }

      - Properties [0] {
      }

      - Methods [5] {
        Method [ <internal:cassandra, ctor> private method __construct ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, overwrites Cassandra\Type, prototype Cassandra\Type> public method name ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> public method valueType ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, overwrites Cassandra\Type, prototype Cassandra\Type> public method __toString ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> public method create ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $value ]
          }
        }
      }
    }

    Class [ <internal:cassandra> final class Cassandra\Type\Set extends Cassandra\Type ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [26] {
        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method ascii ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method bigint ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method smallint ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method tinyint ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method blob ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method boolean ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method counter ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method decimal ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method double ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method duration ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method float ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method int ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method text ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method timestamp ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method date ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method time ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method uuid ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method varchar ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method varint ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method timeuuid ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method inet ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method collection ] {

          - Parameters [1] {
            Parameter #0 [ <required> Cassandra\Type $type ]
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method set ] {

          - Parameters [1] {
            Parameter #0 [ <required> Cassandra\Type $type ]
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method map ] {

          - Parameters [2] {
            Parameter #0 [ <required> Cassandra\Type $keyType ]
            Parameter #1 [ <required> Cassandra\Type $valueType ]
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method tuple ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $types ]
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method userType ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $types ]
          }
        }
      }

      - Properties [0] {
      }

      - Methods [5] {
        Method [ <internal:cassandra, ctor> private method __construct ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, overwrites Cassandra\Type, prototype Cassandra\Type> public method name ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> public method valueType ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, overwrites Cassandra\Type, prototype Cassandra\Type> public method __toString ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> public method create ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $value ]
          }
        }
      }
    }

    Class [ <internal:cassandra> final class Cassandra\Type\Map extends Cassandra\Type ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [26] {
        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method ascii ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method bigint ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method smallint ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method tinyint ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method blob ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method boolean ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method counter ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method decimal ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method double ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method duration ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method float ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method int ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method text ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method timestamp ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method date ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method time ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method uuid ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method varchar ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method varint ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method timeuuid ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method inet ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method collection ] {

          - Parameters [1] {
            Parameter #0 [ <required> Cassandra\Type $type ]
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method set ] {

          - Parameters [1] {
            Parameter #0 [ <required> Cassandra\Type $type ]
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method map ] {

          - Parameters [2] {
            Parameter #0 [ <required> Cassandra\Type $keyType ]
            Parameter #1 [ <required> Cassandra\Type $valueType ]
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method tuple ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $types ]
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method userType ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $types ]
          }
        }
      }

      - Properties [0] {
      }

      - Methods [6] {
        Method [ <internal:cassandra, ctor> private method __construct ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, overwrites Cassandra\Type, prototype Cassandra\Type> public method name ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> public method keyType ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> public method valueType ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, overwrites Cassandra\Type, prototype Cassandra\Type> public method __toString ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> public method create ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $value ]
          }
        }
      }
    }

    Class [ <internal:cassandra> final class Cassandra\Type\Tuple extends Cassandra\Type ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [26] {
        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method ascii ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method bigint ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method smallint ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method tinyint ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method blob ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method boolean ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method counter ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method decimal ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method double ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method duration ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method float ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method int ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method text ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method timestamp ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method date ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method time ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method uuid ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method varchar ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method varint ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method timeuuid ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method inet ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method collection ] {

          - Parameters [1] {
            Parameter #0 [ <required> Cassandra\Type $type ]
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method set ] {

          - Parameters [1] {
            Parameter #0 [ <required> Cassandra\Type $type ]
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method map ] {

          - Parameters [2] {
            Parameter #0 [ <required> Cassandra\Type $keyType ]
            Parameter #1 [ <required> Cassandra\Type $valueType ]
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method tuple ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $types ]
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method userType ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $types ]
          }
        }
      }

      - Properties [0] {
      }

      - Methods [5] {
        Method [ <internal:cassandra, ctor> private method __construct ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, overwrites Cassandra\Type, prototype Cassandra\Type> public method name ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, overwrites Cassandra\Type, prototype Cassandra\Type> public method __toString ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> public method types ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> public method create ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $values ]
          }
        }
      }
    }

    Class [ <internal:cassandra> final class Cassandra\Type\UserType extends Cassandra\Type ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [26] {
        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method ascii ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method bigint ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method smallint ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method tinyint ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method blob ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method boolean ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method counter ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method decimal ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method double ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method duration ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method float ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method int ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method text ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method timestamp ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method date ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method time ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method uuid ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method varchar ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method varint ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method timeuuid ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method inet ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method collection ] {

          - Parameters [1] {
            Parameter #0 [ <required> Cassandra\Type $type ]
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method set ] {

          - Parameters [1] {
            Parameter #0 [ <required> Cassandra\Type $type ]
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method map ] {

          - Parameters [2] {
            Parameter #0 [ <required> Cassandra\Type $keyType ]
            Parameter #1 [ <required> Cassandra\Type $valueType ]
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method tuple ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $types ]
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method userType ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $types ]
          }
        }
      }

      - Properties [0] {
      }

      - Methods [8] {
        Method [ <internal:cassandra, ctor> private method __construct ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> public method withName ] {

          - Parameters [1] {
            Parameter #0 [ <required> $name ]
          }
        }

        Method [ <internal:cassandra, overwrites Cassandra\Type, prototype Cassandra\Type> public method name ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> public method withKeyspace ] {

          - Parameters [1] {
            Parameter #0 [ <required> $keyspace ]
          }
        }

        Method [ <internal:cassandra> public method keyspace ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, overwrites Cassandra\Type, prototype Cassandra\Type> public method __toString ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> public method types ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> public method create ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $value ]
          }
        }
      }
    }

    Class [ <internal:cassandra> final class Cassandra\Type\Custom extends Cassandra\Type ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [26] {
        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method ascii ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method bigint ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method smallint ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method tinyint ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method blob ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method boolean ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method counter ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method decimal ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method double ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method duration ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method float ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method int ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method text ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method timestamp ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method date ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method time ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method uuid ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method varchar ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method varint ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method timeuuid ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method inet ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method collection ] {

          - Parameters [1] {
            Parameter #0 [ <required> Cassandra\Type $type ]
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method set ] {

          - Parameters [1] {
            Parameter #0 [ <required> Cassandra\Type $type ]
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method map ] {

          - Parameters [2] {
            Parameter #0 [ <required> Cassandra\Type $keyType ]
            Parameter #1 [ <required> Cassandra\Type $valueType ]
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method tuple ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $types ]
          }
        }

        Method [ <internal:cassandra, inherits Cassandra\Type> final static public method userType ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $types ]
          }
        }
      }

      - Properties [0] {
      }

      - Methods [4] {
        Method [ <internal:cassandra, ctor> private method __construct ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, overwrites Cassandra\Type, prototype Cassandra\Type> public method name ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra, overwrites Cassandra\Type, prototype Cassandra\Type> public method __toString ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:cassandra> public method create ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $value ]
          }
        }
      }
    }

    Interface [ <internal:cassandra> interface Cassandra\RetryPolicy ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [0] {
      }
    }

    Class [ <internal:cassandra> final class Cassandra\RetryPolicy\DefaultPolicy implements Cassandra\RetryPolicy ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [0] {
      }
    }

    Class [ <internal:cassandra> final class Cassandra\RetryPolicy\DowngradingConsistency implements Cassandra\RetryPolicy ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [0] {
      }
    }

    Class [ <internal:cassandra> final class Cassandra\RetryPolicy\Fallthrough implements Cassandra\RetryPolicy ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [0] {
      }
    }

    Class [ <internal:cassandra> final class Cassandra\RetryPolicy\Logging implements Cassandra\RetryPolicy ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [1] {
        Method [ <internal:cassandra, ctor> public method __construct ] {

          - Parameters [1] {
            Parameter #0 [ <required> Cassandra\RetryPolicy $childPolicy ]
          }
        }
      }
    }

    Interface [ <internal:cassandra> interface Cassandra\TimestampGenerator ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [0] {
      }
    }

    Class [ <internal:cassandra> final class Cassandra\TimestampGenerator\Monotonic implements Cassandra\TimestampGenerator ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [0] {
      }
    }

    Class [ <internal:cassandra> final class Cassandra\TimestampGenerator\ServerSide implements Cassandra\TimestampGenerator ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [0] {
      }
    }
  }
}

