Extension [ <persistent> extension #145 v8js version 1.3.6 ] {

  - INI {
    Entry [ v8js.flags <ALL> ]
      Current = ''
    }
    Entry [ v8js.use_date <ALL> ]
      Current = '0'
    }
    Entry [ v8js.use_array_access <ALL> ]
      Current = '0'
    }
    Entry [ v8js.compat_php_exceptions <ALL> ]
      Current = '0'
    }
  }

  - Classes [8] {
    Class [ <internal:v8js> class V8Js ] {

      - Constants [4] {
        Constant [ string V8_VERSION ] { 5.2.258 }
        Constant [ integer FLAG_NONE ] { 1 }
        Constant [ integer FLAG_FORCE_ARRAY ] { 2 }
        Constant [ integer FLAG_PROPAGATE_PHP_EXCEPTIONS ] { 4 }
      }

      - Static properties [0] {
      }

      - Static methods [3] {
        Method [ <internal:v8js> static public method registerExtension ] {

          - Parameters [4] {
            Parameter #0 [ <required> $extension_name ]
            Parameter #1 [ <required> $script ]
            Parameter #2 [ <optional> $dependencies ]
            Parameter #3 [ <optional> $auto_enable ]
          }
        }

        Method [ <internal:v8js> static public method getExtensions ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:v8js> static public method createSnapshot ] {

          - Parameters [1] {
            Parameter #0 [ <required> $script ]
          }
        }
      }

      - Properties [0] {
      }

      - Methods [14] {
        Method [ <internal:v8js, ctor> public method __construct ] {

          - Parameters [5] {
            Parameter #0 [ <optional> $object_name ]
            Parameter #1 [ <optional> $variables ]
            Parameter #2 [ <optional> $extensions ]
            Parameter #3 [ <optional> $report_uncaught_exceptions ]
            Parameter #4 [ <optional> $snapshot_blob ]
          }
        }

        Method [ <internal:v8js> final public method __sleep ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:v8js> final public method __wakeup ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:v8js> public method executeString ] {

          - Parameters [5] {
            Parameter #0 [ <required> $script ]
            Parameter #1 [ <optional> $identifier ]
            Parameter #2 [ <optional> $flags ]
            Parameter #3 [ <optional> $time_limit ]
            Parameter #4 [ <optional> $memory_limit ]
          }
        }

        Method [ <internal:v8js> public method compileString ] {

          - Parameters [2] {
            Parameter #0 [ <required> $script ]
            Parameter #1 [ <optional> $identifier ]
          }
        }

        Method [ <internal:v8js> public method executeScript ] {

          - Parameters [4] {
            Parameter #0 [ <required> $script ]
            Parameter #1 [ <optional> $flags ]
            Parameter #2 [ <optional> $time_limit ]
            Parameter #3 [ <optional> $memory_limit ]
          }
        }

        Method [ <internal, deprecated:v8js> public method checkString ] {

          - Parameters [1] {
            Parameter #0 [ <required> $script ]
          }
        }

        Method [ <internal:v8js> public method getPendingException ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:v8js> public method clearPendingException ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:v8js> public method setModuleNormaliser ] {

          - Parameters [2] {
            Parameter #0 [ <required> $base ]
            Parameter #1 [ <required> $module_id ]
          }
        }

        Method [ <internal:v8js> public method setModuleLoader ] {

          - Parameters [1] {
            Parameter #0 [ <required> $callable ]
          }
        }

        Method [ <internal:v8js> public method setTimeLimit ] {

          - Parameters [1] {
            Parameter #0 [ <required> $time_limit ]
          }
        }

        Method [ <internal:v8js> public method setMemoryLimit ] {

          - Parameters [1] {
            Parameter #0 [ <required> $memory_limit ]
          }
        }

        Method [ <internal:v8js> public method setAverageObjectSize ] {

          - Parameters [1] {
            Parameter #0 [ <required> $average_object_size ]
          }
        }
      }
    }

    Class [ <internal:v8js> class V8JsException extends RuntimeException implements Throwable ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [4] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
      }

      - Methods [10] {
        Method [ <internal:Core, inherits Exception, ctor> public method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> public method __wakeup ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> public method __toString ] {
        }
      }
    }

    Class [ <internal:v8js> final class V8JsScriptException extends V8JsException implements Throwable ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [10] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
        Property [ <default> protected $JsFileName ]
        Property [ <default> protected $JsLineNumber ]
        Property [ <default> protected $JsStartColumn ]
        Property [ <default> protected $JsEndColumn ]
        Property [ <default> protected $JsSourceLine ]
        Property [ <default> protected $JsTrace ]
      }

      - Methods [16] {
        Method [ <internal:v8js> final public method getJsFileName ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:v8js> final public method getJsLineNumber ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:v8js> final public method getJsStartColumn ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:v8js> final public method getJsEndColumn ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:v8js> final public method getJsSourceLine ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:v8js> final public method getJsTrace ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:Core, inherits Exception, ctor> public method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> public method __wakeup ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> public method __toString ] {
        }
      }
    }

    Class [ <internal:v8js> final class V8JsTimeLimitException extends V8JsException implements Throwable ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [4] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
      }

      - Methods [10] {
        Method [ <internal:Core, inherits Exception, ctor> public method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> public method __wakeup ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> public method __toString ] {
        }
      }
    }

    Class [ <internal:v8js> final class V8JsMemoryLimitException extends V8JsException implements Throwable ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [4] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
      }

      - Methods [10] {
        Method [ <internal:Core, inherits Exception, ctor> public method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> public method __wakeup ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> public method __toString ] {
        }
      }
    }

    Class [ <internal:v8js> final class V8Object ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [3] {
        Method [ <internal:v8js, ctor> public method __construct ] {
        }

        Method [ <internal:v8js> final public method __sleep ] {
        }

        Method [ <internal:v8js> final public method __wakeup ] {
        }
      }
    }

    Class [ <internal:v8js> final class V8Function ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [3] {
        Method [ <internal:v8js, ctor> public method __construct ] {
        }

        Method [ <internal:v8js> final public method __sleep ] {
        }

        Method [ <internal:v8js> final public method __wakeup ] {
        }
      }
    }

    Class [ <internal:v8js> <iterateable> final class V8Generator implements Iterator, Traversable ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [8] {
        Method [ <internal:v8js, ctor> public method __construct ] {
        }

        Method [ <internal:v8js> final public method __sleep ] {
        }

        Method [ <internal:v8js> final public method __wakeup ] {
        }

        Method [ <internal:v8js, prototype Iterator> public method current ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:v8js, prototype Iterator> public method key ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:v8js, prototype Iterator> public method next ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:v8js, prototype Iterator> public method rewind ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:v8js, prototype Iterator> public method valid ] {

          - Parameters [0] {
          }
        }
      }
    }
  }
}

