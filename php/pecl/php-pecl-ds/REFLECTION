Extension [ <persistent> extension #81 ds version 1.1.7 ] {

  - Dependencies {
    Dependency [ json (Required) ]
    Dependency [ spl (Required) ]
  }

  - Classes [11] {
    Interface [ <internal:ds> interface Ds\Hashable ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [2] {
        Method [ <internal:ds> abstract public method hash ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ds> abstract public method equals ] {

          - Parameters [1] {
            Parameter #0 [ <required> $obj ]
          }
          - Return [ boolean ]
        }
      }
    }

    Interface [ <internal:ds> interface Ds\Collection extends Traversable, Countable, JsonSerializable ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [6] {
        Method [ <internal:ds> abstract public method clear ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ds> abstract public method copy ] {

          - Parameters [0] {
          }
          - Return [ Ds\Collection or NULL ]
        }

        Method [ <internal:ds> abstract public method isEmpty ] {

          - Parameters [0] {
          }
          - Return [ boolean ]
        }

        Method [ <internal:ds> abstract public method toArray ] {

          - Parameters [0] {
          }
          - Return [ array ]
        }

        Method [ <internal:SPL, inherits Countable> abstract public method count ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:json, inherits JsonSerializable> abstract public method jsonSerialize ] {

          - Parameters [0] {
          }
        }
      }
    }

    Interface [ <internal:ds> interface Ds\Sequence extends Ds\Collection, JsonSerializable, Countable, Traversable ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [30] {
        Method [ <internal:ds, ctor> abstract public method __construct ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $values ]
          }
        }

        Method [ <internal:ds> abstract public method allocate ] {

          - Parameters [1] {
            Parameter #0 [ <required> integer $capacity ]
          }
        }

        Method [ <internal:ds> abstract public method capacity ] {

          - Parameters [0] {
          }
          - Return [ integer ]
        }

        Method [ <internal:ds> abstract public method contains ] {

          - Parameters [1] {
            Parameter #0 [ <optional> ...$values ]
          }
          - Return [ boolean ]
        }

        Method [ <internal:ds> abstract public method filter ] {

          - Parameters [1] {
            Parameter #0 [ <optional> callable or NULL $callback ]
          }
          - Return [ Ds\Sequence or NULL ]
        }

        Method [ <internal:ds> abstract public method find ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:ds> abstract public method first ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ds> abstract public method get ] {

          - Parameters [1] {
            Parameter #0 [ <required> integer $index ]
          }
        }

        Method [ <internal:ds> abstract public method insert ] {

          - Parameters [2] {
            Parameter #0 [ <required> integer $index ]
            Parameter #1 [ <optional> ...$values ]
          }
        }

        Method [ <internal:ds> abstract public method join ] {

          - Parameters [1] {
            Parameter #0 [ <optional> string $glue ]
          }
          - Return [ string ]
        }

        Method [ <internal:ds> abstract public method last ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ds> abstract public method map ] {

          - Parameters [1] {
            Parameter #0 [ <required> callable $callback ]
          }
          - Return [ Ds\Sequence or NULL ]
        }

        Method [ <internal:ds> abstract public method merge ] {

          - Parameters [1] {
            Parameter #0 [ <required> $values ]
          }
          - Return [ Ds\Sequence or NULL ]
        }

        Method [ <internal:ds> abstract public method pop ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ds> abstract public method push ] {

          - Parameters [1] {
            Parameter #0 [ <optional> ...$values ]
          }
        }

        Method [ <internal:ds> abstract public method reduce ] {

          - Parameters [2] {
            Parameter #0 [ <required> callable $callback ]
            Parameter #1 [ <optional> $initial ]
          }
        }

        Method [ <internal:ds> abstract public method remove ] {

          - Parameters [1] {
            Parameter #0 [ <required> integer $index ]
          }
        }

        Method [ <internal:ds> abstract public method reverse ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ds> abstract public method rotate ] {

          - Parameters [1] {
            Parameter #0 [ <required> integer $rotations ]
          }
        }

        Method [ <internal:ds> abstract public method set ] {

          - Parameters [2] {
            Parameter #0 [ <required> integer $index ]
            Parameter #1 [ <required> $value ]
          }
        }

        Method [ <internal:ds> abstract public method shift ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ds> abstract public method slice ] {

          - Parameters [2] {
            Parameter #0 [ <required> integer $index ]
            Parameter #1 [ <optional> integer or NULL $length ]
          }
          - Return [ Ds\Sequence or NULL ]
        }

        Method [ <internal:ds> abstract public method sort ] {

          - Parameters [1] {
            Parameter #0 [ <optional> callable or NULL $comparator ]
          }
        }

        Method [ <internal:ds> abstract public method unshift ] {

          - Parameters [1] {
            Parameter #0 [ <optional> ...$values ]
          }
        }

        Method [ <internal:ds, inherits Ds\Collection> abstract public method clear ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ds, inherits Ds\Collection> abstract public method copy ] {

          - Parameters [0] {
          }
          - Return [ Ds\Collection or NULL ]
        }

        Method [ <internal:ds, inherits Ds\Collection> abstract public method isEmpty ] {

          - Parameters [0] {
          }
          - Return [ boolean ]
        }

        Method [ <internal:ds, inherits Ds\Collection> abstract public method toArray ] {

          - Parameters [0] {
          }
          - Return [ array ]
        }

        Method [ <internal:SPL, inherits Countable> abstract public method count ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:json, inherits JsonSerializable> abstract public method jsonSerialize ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:ds> <iterateable> final class Ds\Vector implements Ds\Sequence, Traversable, Countable, JsonSerializable, Ds\Collection ] {

      - Constants [1] {
        Constant [ integer MIN_CAPACITY ] { 10 }
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [34] {
        Method [ <internal:ds, prototype Ds\Sequence, ctor> public method __construct ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $values ]
          }
        }

        Method [ <internal:ds, prototype Ds\Sequence> public method allocate ] {

          - Parameters [1] {
            Parameter #0 [ <required> integer $capacity ]
          }
        }

        Method [ <internal:ds> public method apply ] {

          - Parameters [1] {
            Parameter #0 [ <required> callable $callback ]
          }
        }

        Method [ <internal:ds, prototype Ds\Sequence> public method capacity ] {

          - Parameters [0] {
          }
          - Return [ integer ]
        }

        Method [ <internal:ds, prototype Ds\Sequence> public method contains ] {

          - Parameters [1] {
            Parameter #0 [ <optional> ...$values ]
          }
          - Return [ boolean ]
        }

        Method [ <internal:ds, prototype Ds\Sequence> public method filter ] {

          - Parameters [1] {
            Parameter #0 [ <optional> callable or NULL $callback ]
          }
          - Return [ Ds\Sequence or NULL ]
        }

        Method [ <internal:ds, prototype Ds\Sequence> public method find ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:ds, prototype Ds\Sequence> public method first ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ds, prototype Ds\Sequence> public method get ] {

          - Parameters [1] {
            Parameter #0 [ <required> integer $index ]
          }
        }

        Method [ <internal:ds, prototype Ds\Sequence> public method insert ] {

          - Parameters [2] {
            Parameter #0 [ <required> integer $index ]
            Parameter #1 [ <optional> ...$values ]
          }
        }

        Method [ <internal:ds, prototype Ds\Sequence> public method join ] {

          - Parameters [1] {
            Parameter #0 [ <optional> string $glue ]
          }
          - Return [ string ]
        }

        Method [ <internal:ds, prototype Ds\Sequence> public method last ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ds, prototype Ds\Sequence> public method map ] {

          - Parameters [1] {
            Parameter #0 [ <required> callable $callback ]
          }
          - Return [ Ds\Sequence or NULL ]
        }

        Method [ <internal:ds, prototype Ds\Sequence> public method merge ] {

          - Parameters [1] {
            Parameter #0 [ <required> $values ]
          }
          - Return [ Ds\Sequence or NULL ]
        }

        Method [ <internal:ds, prototype Ds\Sequence> public method pop ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ds, prototype Ds\Sequence> public method push ] {

          - Parameters [1] {
            Parameter #0 [ <optional> ...$values ]
          }
        }

        Method [ <internal:ds, prototype Ds\Sequence> public method reduce ] {

          - Parameters [2] {
            Parameter #0 [ <required> callable $callback ]
            Parameter #1 [ <optional> $initial ]
          }
        }

        Method [ <internal:ds, prototype Ds\Sequence> public method remove ] {

          - Parameters [1] {
            Parameter #0 [ <required> integer $index ]
          }
        }

        Method [ <internal:ds, prototype Ds\Sequence> public method reverse ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ds> public method reversed ] {

          - Parameters [0] {
          }
          - Return [ Ds\Sequence or NULL ]
        }

        Method [ <internal:ds, prototype Ds\Sequence> public method rotate ] {

          - Parameters [1] {
            Parameter #0 [ <required> integer $rotations ]
          }
        }

        Method [ <internal:ds, prototype Ds\Sequence> public method set ] {

          - Parameters [2] {
            Parameter #0 [ <required> integer $index ]
            Parameter #1 [ <required> $value ]
          }
        }

        Method [ <internal:ds, prototype Ds\Sequence> public method shift ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ds, prototype Ds\Sequence> public method slice ] {

          - Parameters [2] {
            Parameter #0 [ <required> integer $index ]
            Parameter #1 [ <optional> integer or NULL $length ]
          }
          - Return [ Ds\Sequence or NULL ]
        }

        Method [ <internal:ds, prototype Ds\Sequence> public method sort ] {

          - Parameters [1] {
            Parameter #0 [ <optional> callable or NULL $comparator ]
          }
        }

        Method [ <internal:ds> public method sorted ] {

          - Parameters [1] {
            Parameter #0 [ <optional> callable or NULL $comparator ]
          }
          - Return [ Ds\Sequence or NULL ]
        }

        Method [ <internal:ds> public method sum ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ds, prototype Ds\Sequence> public method unshift ] {

          - Parameters [1] {
            Parameter #0 [ <optional> ...$values ]
          }
        }

        Method [ <internal:ds, prototype Ds\Collection> public method clear ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ds, prototype Ds\Collection> public method copy ] {

          - Parameters [0] {
          }
          - Return [ Ds\Collection or NULL ]
        }

        Method [ <internal:ds, prototype Countable> public method count ] {

          - Parameters [0] {
          }
          - Return [ integer ]
        }

        Method [ <internal:ds, prototype Ds\Collection> public method isEmpty ] {

          - Parameters [0] {
          }
          - Return [ boolean ]
        }

        Method [ <internal:ds, prototype JsonSerializable> public method jsonSerialize ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ds, prototype Ds\Collection> public method toArray ] {

          - Parameters [0] {
          }
          - Return [ array ]
        }
      }
    }

    Class [ <internal:ds> <iterateable> final class Ds\Deque implements Ds\Sequence, Traversable, Countable, JsonSerializable, Ds\Collection ] {

      - Constants [1] {
        Constant [ integer MIN_CAPACITY ] { 8 }
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [34] {
        Method [ <internal:ds, prototype Ds\Collection> public method clear ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ds, prototype Ds\Collection> public method copy ] {

          - Parameters [0] {
          }
          - Return [ Ds\Collection or NULL ]
        }

        Method [ <internal:ds, prototype Countable> public method count ] {

          - Parameters [0] {
          }
          - Return [ integer ]
        }

        Method [ <internal:ds, prototype Ds\Collection> public method isEmpty ] {

          - Parameters [0] {
          }
          - Return [ boolean ]
        }

        Method [ <internal:ds, prototype JsonSerializable> public method jsonSerialize ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ds, prototype Ds\Collection> public method toArray ] {

          - Parameters [0] {
          }
          - Return [ array ]
        }

        Method [ <internal:ds, prototype Ds\Sequence, ctor> public method __construct ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $values ]
          }
        }

        Method [ <internal:ds, prototype Ds\Sequence> public method allocate ] {

          - Parameters [1] {
            Parameter #0 [ <required> integer $capacity ]
          }
        }

        Method [ <internal:ds> public method apply ] {

          - Parameters [1] {
            Parameter #0 [ <required> callable $callback ]
          }
        }

        Method [ <internal:ds, prototype Ds\Sequence> public method capacity ] {

          - Parameters [0] {
          }
          - Return [ integer ]
        }

        Method [ <internal:ds, prototype Ds\Sequence> public method contains ] {

          - Parameters [1] {
            Parameter #0 [ <optional> ...$values ]
          }
          - Return [ boolean ]
        }

        Method [ <internal:ds, prototype Ds\Sequence> public method filter ] {

          - Parameters [1] {
            Parameter #0 [ <optional> callable or NULL $callback ]
          }
          - Return [ Ds\Sequence or NULL ]
        }

        Method [ <internal:ds, prototype Ds\Sequence> public method find ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:ds, prototype Ds\Sequence> public method first ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ds, prototype Ds\Sequence> public method get ] {

          - Parameters [1] {
            Parameter #0 [ <required> integer $index ]
          }
        }

        Method [ <internal:ds, prototype Ds\Sequence> public method insert ] {

          - Parameters [2] {
            Parameter #0 [ <required> integer $index ]
            Parameter #1 [ <optional> ...$values ]
          }
        }

        Method [ <internal:ds, prototype Ds\Sequence> public method join ] {

          - Parameters [1] {
            Parameter #0 [ <optional> string $glue ]
          }
          - Return [ string ]
        }

        Method [ <internal:ds, prototype Ds\Sequence> public method last ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ds, prototype Ds\Sequence> public method map ] {

          - Parameters [1] {
            Parameter #0 [ <required> callable $callback ]
          }
          - Return [ Ds\Sequence or NULL ]
        }

        Method [ <internal:ds, prototype Ds\Sequence> public method merge ] {

          - Parameters [1] {
            Parameter #0 [ <required> $values ]
          }
          - Return [ Ds\Sequence or NULL ]
        }

        Method [ <internal:ds, prototype Ds\Sequence> public method pop ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ds, prototype Ds\Sequence> public method push ] {

          - Parameters [1] {
            Parameter #0 [ <optional> ...$values ]
          }
        }

        Method [ <internal:ds, prototype Ds\Sequence> public method reduce ] {

          - Parameters [2] {
            Parameter #0 [ <required> callable $callback ]
            Parameter #1 [ <optional> $initial ]
          }
        }

        Method [ <internal:ds, prototype Ds\Sequence> public method remove ] {

          - Parameters [1] {
            Parameter #0 [ <required> integer $index ]
          }
        }

        Method [ <internal:ds, prototype Ds\Sequence> public method reverse ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ds> public method reversed ] {

          - Parameters [0] {
          }
          - Return [ Ds\Sequence or NULL ]
        }

        Method [ <internal:ds, prototype Ds\Sequence> public method rotate ] {

          - Parameters [1] {
            Parameter #0 [ <required> integer $rotations ]
          }
        }

        Method [ <internal:ds, prototype Ds\Sequence> public method set ] {

          - Parameters [2] {
            Parameter #0 [ <required> integer $index ]
            Parameter #1 [ <required> $value ]
          }
        }

        Method [ <internal:ds, prototype Ds\Sequence> public method shift ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ds, prototype Ds\Sequence> public method slice ] {

          - Parameters [2] {
            Parameter #0 [ <required> integer $index ]
            Parameter #1 [ <optional> integer or NULL $length ]
          }
          - Return [ Ds\Sequence or NULL ]
        }

        Method [ <internal:ds, prototype Ds\Sequence> public method sort ] {

          - Parameters [1] {
            Parameter #0 [ <optional> callable or NULL $comparator ]
          }
        }

        Method [ <internal:ds> public method sorted ] {

          - Parameters [1] {
            Parameter #0 [ <optional> callable or NULL $comparator ]
          }
          - Return [ Ds\Sequence or NULL ]
        }

        Method [ <internal:ds> public method sum ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ds, prototype Ds\Sequence> public method unshift ] {

          - Parameters [1] {
            Parameter #0 [ <optional> ...$values ]
          }
        }
      }
    }

    Class [ <internal:ds> <iterateable> final class Ds\Stack implements Ds\Collection, JsonSerializable, Countable, Traversable ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [12] {
        Method [ <internal:ds, ctor> public method __construct ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $values ]
          }
        }

        Method [ <internal:ds> public method allocate ] {

          - Parameters [1] {
            Parameter #0 [ <required> integer $capacity ]
          }
        }

        Method [ <internal:ds> public method capacity ] {

          - Parameters [0] {
          }
          - Return [ integer ]
        }

        Method [ <internal:ds> public method peek ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ds> public method pop ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ds> public method push ] {

          - Parameters [1] {
            Parameter #0 [ <optional> ...$values ]
          }
        }

        Method [ <internal:ds, prototype Ds\Collection> public method clear ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ds, prototype Ds\Collection> public method copy ] {

          - Parameters [0] {
          }
          - Return [ Ds\Collection or NULL ]
        }

        Method [ <internal:ds, prototype Countable> public method count ] {

          - Parameters [0] {
          }
          - Return [ integer ]
        }

        Method [ <internal:ds, prototype Ds\Collection> public method isEmpty ] {

          - Parameters [0] {
          }
          - Return [ boolean ]
        }

        Method [ <internal:ds, prototype JsonSerializable> public method jsonSerialize ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ds, prototype Ds\Collection> public method toArray ] {

          - Parameters [0] {
          }
          - Return [ array ]
        }
      }
    }

    Class [ <internal:ds> <iterateable> final class Ds\Queue implements Ds\Collection, JsonSerializable, Countable, Traversable ] {

      - Constants [1] {
        Constant [ integer MIN_CAPACITY ] { 8 }
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [12] {
        Method [ <internal:ds, ctor> public method __construct ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $values ]
          }
        }

        Method [ <internal:ds> public method allocate ] {

          - Parameters [1] {
            Parameter #0 [ <required> integer $capacity ]
          }
        }

        Method [ <internal:ds> public method capacity ] {

          - Parameters [0] {
          }
          - Return [ integer ]
        }

        Method [ <internal:ds> public method peek ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ds> public method pop ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ds> public method push ] {

          - Parameters [1] {
            Parameter #0 [ <optional> ...$values ]
          }
        }

        Method [ <internal:ds, prototype Ds\Collection> public method clear ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ds, prototype Ds\Collection> public method copy ] {

          - Parameters [0] {
          }
          - Return [ Ds\Collection or NULL ]
        }

        Method [ <internal:ds, prototype Countable> public method count ] {

          - Parameters [0] {
          }
          - Return [ integer ]
        }

        Method [ <internal:ds, prototype Ds\Collection> public method isEmpty ] {

          - Parameters [0] {
          }
          - Return [ boolean ]
        }

        Method [ <internal:ds, prototype JsonSerializable> public method jsonSerialize ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ds, prototype Ds\Collection> public method toArray ] {

          - Parameters [0] {
          }
          - Return [ array ]
        }
      }
    }

    Class [ <internal:ds> <iterateable> final class Ds\Map implements Ds\Collection, JsonSerializable, Countable, Traversable ] {

      - Constants [1] {
        Constant [ integer MIN_CAPACITY ] { 16 }
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [38] {
        Method [ <internal:ds, ctor> public method __construct ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $values ]
          }
        }

        Method [ <internal:ds> public method allocate ] {

          - Parameters [1] {
            Parameter #0 [ <required> integer $capacity ]
          }
        }

        Method [ <internal:ds> public method apply ] {

          - Parameters [1] {
            Parameter #0 [ <required> callable $callback ]
          }
        }

        Method [ <internal:ds> public method capacity ] {

          - Parameters [0] {
          }
          - Return [ integer ]
        }

        Method [ <internal:ds> public method diff ] {

          - Parameters [1] {
            Parameter #0 [ <required> Ds\Map $map ]
          }
          - Return [ Ds\Map or NULL ]
        }

        Method [ <internal:ds> public method filter ] {

          - Parameters [1] {
            Parameter #0 [ <optional> callable or NULL $callback ]
          }
          - Return [ Ds\Map or NULL ]
        }

        Method [ <internal:ds> public method first ] {

          - Parameters [0] {
          }
          - Return [ Ds\Pair or NULL ]
        }

        Method [ <internal:ds> public method get ] {

          - Parameters [2] {
            Parameter #0 [ <required> $key ]
            Parameter #1 [ <optional> $default ]
          }
        }

        Method [ <internal:ds> public method hasKey ] {

          - Parameters [1] {
            Parameter #0 [ <required> $key ]
          }
          - Return [ boolean ]
        }

        Method [ <internal:ds> public method hasValue ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
          - Return [ boolean ]
        }

        Method [ <internal:ds> public method intersect ] {

          - Parameters [1] {
            Parameter #0 [ <required> Ds\Map $map ]
          }
          - Return [ Ds\Map or NULL ]
        }

        Method [ <internal:ds> public method keys ] {

          - Parameters [0] {
          }
          - Return [ Ds\Set or NULL ]
        }

        Method [ <internal:ds> public method ksort ] {

          - Parameters [1] {
            Parameter #0 [ <optional> callable or NULL $comparator ]
          }
        }

        Method [ <internal:ds> public method ksorted ] {

          - Parameters [1] {
            Parameter #0 [ <optional> callable or NULL $comparator ]
          }
          - Return [ Ds\Map or NULL ]
        }

        Method [ <internal:ds> public method last ] {

          - Parameters [0] {
          }
          - Return [ Ds\Pair or NULL ]
        }

        Method [ <internal:ds> public method map ] {

          - Parameters [1] {
            Parameter #0 [ <required> callable $callback ]
          }
          - Return [ Ds\Map or NULL ]
        }

        Method [ <internal:ds> public method merge ] {

          - Parameters [1] {
            Parameter #0 [ <required> $values ]
          }
          - Return [ Ds\Map or NULL ]
        }

        Method [ <internal:ds> public method pairs ] {

          - Parameters [0] {
          }
          - Return [ Ds\Sequence or NULL ]
        }

        Method [ <internal:ds> public method put ] {

          - Parameters [2] {
            Parameter #0 [ <required> $key ]
            Parameter #1 [ <required> $value ]
          }
        }

        Method [ <internal:ds> public method putAll ] {

          - Parameters [1] {
            Parameter #0 [ <required> $values ]
          }
        }

        Method [ <internal:ds> public method reduce ] {

          - Parameters [2] {
            Parameter #0 [ <required> callable $callback ]
            Parameter #1 [ <optional> $initial ]
          }
        }

        Method [ <internal:ds> public method remove ] {

          - Parameters [2] {
            Parameter #0 [ <required> $key ]
            Parameter #1 [ <optional> $default ]
          }
        }

        Method [ <internal:ds> public method reverse ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ds> public method reversed ] {

          - Parameters [0] {
          }
          - Return [ Ds\Map or NULL ]
        }

        Method [ <internal:ds> public method skip ] {

          - Parameters [1] {
            Parameter #0 [ <required> integer $position ]
          }
          - Return [ Ds\Pair or NULL ]
        }

        Method [ <internal:ds> public method slice ] {

          - Parameters [2] {
            Parameter #0 [ <required> integer $index ]
            Parameter #1 [ <optional> integer or NULL $length ]
          }
          - Return [ Ds\Map or NULL ]
        }

        Method [ <internal:ds> public method sort ] {

          - Parameters [1] {
            Parameter #0 [ <optional> callable or NULL $comparator ]
          }
        }

        Method [ <internal:ds> public method sorted ] {

          - Parameters [1] {
            Parameter #0 [ <optional> callable or NULL $comparator ]
          }
          - Return [ Ds\Map or NULL ]
        }

        Method [ <internal:ds> public method sum ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ds> public method union ] {

          - Parameters [1] {
            Parameter #0 [ <required> $map ]
          }
          - Return [ Ds\Map or NULL ]
        }

        Method [ <internal:ds> public method values ] {

          - Parameters [0] {
          }
          - Return [ Ds\Sequence or NULL ]
        }

        Method [ <internal:ds> public method xor ] {

          - Parameters [1] {
            Parameter #0 [ <required> Ds\Map $map ]
          }
          - Return [ Ds\Map or NULL ]
        }

        Method [ <internal:ds, prototype Ds\Collection> public method clear ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ds, prototype Ds\Collection> public method copy ] {

          - Parameters [0] {
          }
          - Return [ Ds\Collection or NULL ]
        }

        Method [ <internal:ds, prototype Countable> public method count ] {

          - Parameters [0] {
          }
          - Return [ integer ]
        }

        Method [ <internal:ds, prototype Ds\Collection> public method isEmpty ] {

          - Parameters [0] {
          }
          - Return [ boolean ]
        }

        Method [ <internal:ds, prototype JsonSerializable> public method jsonSerialize ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ds, prototype Ds\Collection> public method toArray ] {

          - Parameters [0] {
          }
          - Return [ array ]
        }
      }
    }

    Class [ <internal:ds> <iterateable> final class Ds\Set implements Ds\Collection, JsonSerializable, Countable, Traversable ] {

      - Constants [1] {
        Constant [ integer MIN_CAPACITY ] { 16 }
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [29] {
        Method [ <internal:ds, ctor> public method __construct ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $values ]
          }
        }

        Method [ <internal:ds> public method add ] {

          - Parameters [1] {
            Parameter #0 [ <optional> ...$values ]
          }
        }

        Method [ <internal:ds> public method allocate ] {

          - Parameters [1] {
            Parameter #0 [ <required> integer $capacity ]
          }
        }

        Method [ <internal:ds> public method capacity ] {

          - Parameters [0] {
          }
          - Return [ integer ]
        }

        Method [ <internal:ds> public method contains ] {

          - Parameters [1] {
            Parameter #0 [ <optional> ...$values ]
          }
          - Return [ boolean ]
        }

        Method [ <internal:ds> public method diff ] {

          - Parameters [1] {
            Parameter #0 [ <required> Ds\Set $set ]
          }
          - Return [ Ds\Set or NULL ]
        }

        Method [ <internal:ds> public method filter ] {

          - Parameters [1] {
            Parameter #0 [ <optional> callable or NULL $callback ]
          }
          - Return [ Ds\Set or NULL ]
        }

        Method [ <internal:ds> public method first ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ds> public method get ] {

          - Parameters [1] {
            Parameter #0 [ <required> integer $index ]
          }
        }

        Method [ <internal:ds> public method intersect ] {

          - Parameters [1] {
            Parameter #0 [ <required> Ds\Set $set ]
          }
          - Return [ Ds\Set or NULL ]
        }

        Method [ <internal:ds> public method join ] {

          - Parameters [1] {
            Parameter #0 [ <optional> string $glue ]
          }
        }

        Method [ <internal:ds> public method last ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ds> public method merge ] {

          - Parameters [1] {
            Parameter #0 [ <required> $values ]
          }
          - Return [ Ds\Set or NULL ]
        }

        Method [ <internal:ds> public method reduce ] {

          - Parameters [2] {
            Parameter #0 [ <required> callable $callback ]
            Parameter #1 [ <optional> $initial ]
          }
        }

        Method [ <internal:ds> public method remove ] {

          - Parameters [1] {
            Parameter #0 [ <optional> ...$values ]
          }
        }

        Method [ <internal:ds> public method reverse ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ds> public method reversed ] {

          - Parameters [0] {
          }
          - Return [ Ds\Set or NULL ]
        }

        Method [ <internal:ds> public method slice ] {

          - Parameters [2] {
            Parameter #0 [ <required> integer $index ]
            Parameter #1 [ <optional> integer or NULL $length ]
          }
          - Return [ Ds\Set or NULL ]
        }

        Method [ <internal:ds> public method sort ] {

          - Parameters [1] {
            Parameter #0 [ <optional> callable or NULL $comparator ]
          }
        }

        Method [ <internal:ds> public method sorted ] {

          - Parameters [1] {
            Parameter #0 [ <optional> callable or NULL $comparator ]
          }
          - Return [ Ds\Set or NULL ]
        }

        Method [ <internal:ds> public method sum ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ds> public method union ] {

          - Parameters [1] {
            Parameter #0 [ <required> Ds\Set $set ]
          }
          - Return [ Ds\Set or NULL ]
        }

        Method [ <internal:ds> public method xor ] {

          - Parameters [1] {
            Parameter #0 [ <required> Ds\Set $set ]
          }
          - Return [ Ds\Set or NULL ]
        }

        Method [ <internal:ds, prototype Ds\Collection> public method clear ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ds, prototype Ds\Collection> public method copy ] {

          - Parameters [0] {
          }
          - Return [ Ds\Collection or NULL ]
        }

        Method [ <internal:ds, prototype Countable> public method count ] {

          - Parameters [0] {
          }
          - Return [ integer ]
        }

        Method [ <internal:ds, prototype Ds\Collection> public method isEmpty ] {

          - Parameters [0] {
          }
          - Return [ boolean ]
        }

        Method [ <internal:ds, prototype JsonSerializable> public method jsonSerialize ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ds, prototype Ds\Collection> public method toArray ] {

          - Parameters [0] {
          }
          - Return [ array ]
        }
      }
    }

    Class [ <internal:ds> <iterateable> final class Ds\PriorityQueue implements Ds\Collection, JsonSerializable, Countable, Traversable ] {

      - Constants [1] {
        Constant [ integer MIN_CAPACITY ] { 8 }
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [12] {
        Method [ <internal:ds, ctor> public method __construct ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ds> public method allocate ] {

          - Parameters [1] {
            Parameter #0 [ <required> integer $capacity ]
          }
        }

        Method [ <internal:ds> public method capacity ] {

          - Parameters [0] {
          }
          - Return [ integer ]
        }

        Method [ <internal:ds> public method peek ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ds> public method pop ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ds> public method push ] {

          - Parameters [2] {
            Parameter #0 [ <required> $value ]
            Parameter #1 [ <required> integer $priority ]
          }
        }

        Method [ <internal:ds, prototype Ds\Collection> public method clear ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ds, prototype Ds\Collection> public method copy ] {

          - Parameters [0] {
          }
          - Return [ Ds\Collection or NULL ]
        }

        Method [ <internal:ds, prototype Countable> public method count ] {

          - Parameters [0] {
          }
          - Return [ integer ]
        }

        Method [ <internal:ds, prototype Ds\Collection> public method isEmpty ] {

          - Parameters [0] {
          }
          - Return [ boolean ]
        }

        Method [ <internal:ds, prototype JsonSerializable> public method jsonSerialize ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ds, prototype Ds\Collection> public method toArray ] {

          - Parameters [0] {
          }
          - Return [ array ]
        }
      }
    }

    Class [ <internal:ds> final class Ds\Pair implements JsonSerializable ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [4] {
        Method [ <internal:ds, ctor> public method __construct ] {

          - Parameters [2] {
            Parameter #0 [ <optional> $key ]
            Parameter #1 [ <optional> $value ]
          }
        }

        Method [ <internal:ds> public method copy ] {

          - Parameters [0] {
          }
          - Return [ Ds\Pair or NULL ]
        }

        Method [ <internal:ds, prototype JsonSerializable> public method jsonSerialize ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ds> public method toArray ] {

          - Parameters [0] {
          }
          - Return [ array ]
        }
      }
    }
  }
}

